{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///apps/client/src/app/@core/core.module.ts","webpack:///apps/client/src/app/@core/http/api-prefix.interceptor.ts","webpack:///apps/client/src/app/@core/http/error-handler.interceptor.ts","webpack:///apps/client/src/app/@core/index.ts","webpack:///apps/client/src/app/@core/logger.service.ts","webpack:///apps/client/src/app/@core/route-reusable-strategy.ts","webpack:///apps/client/src/app/@core/services/api.service.ts","webpack:///apps/client/src/app/@core/services/config.service.ts","webpack:///apps/client/src/app/@core/services/core.service.ts","webpack:///apps/client/src/app/@core/until-destroyed.ts","webpack:///apps/client/src/app/@modules/avatar/avatar.component.ts","webpack:///apps/client/src/app/@modules/avatar/avatar.component.html","webpack:///apps/client/src/app/@modules/avatar/avatar.module.ts","webpack:///apps/client/src/app/@modules/card/card.component.ts","webpack:///apps/client/src/app/@modules/card/card.component.html","webpack:///apps/client/src/app/@modules/card/card.module.ts","webpack:///apps/client/src/app/@modules/card/comment-actions/comment-actions.component.ts","webpack:///apps/client/src/app/@modules/card/comment-actions/comment-actions.component.html","webpack:///apps/client/src/app/@modules/card/post-comment/post-comment.component.ts","webpack:///apps/client/src/app/@modules/card/post-comment/post-comment.component.html","webpack:///apps/client/src/app/@modules/card/scroll-view-card/scroll-view-card.component.ts","webpack:///apps/client/src/app/@modules/card/scroll-view-card/scroll-view-card.component.html","webpack:///apps/client/src/app/@modules/panel-bar/panel-bar.component.ts","webpack:///apps/client/src/app/@modules/panel-bar/panel-bar.component.html","webpack:///apps/client/src/app/@modules/panel-bar/panel-bar.module.ts","webpack:///apps/client/src/app/@modules/splitter/splitter.component.ts","webpack:///apps/client/src/app/@modules/splitter/splitter.component.html","webpack:///apps/client/src/app/@modules/splitter/splitter.module.ts","webpack:///apps/client/src/app/@modules/stepper/stepper.component.ts","webpack:///apps/client/src/app/@modules/stepper/stepper.component.html","webpack:///apps/client/src/app/@modules/stepper/stepper.module.ts","webpack:///apps/client/src/app/@shared/index.ts","webpack:///apps/client/src/app/@shared/loader/loader.component.ts","webpack:///apps/client/src/app/@shared/loader/loader.component.html","webpack:///apps/client/src/app/@shared/shared.module.ts","webpack:///apps/client/src/app/app-routing.module.ts","webpack:///apps/client/src/app/app.component.ts","webpack:///apps/client/src/app/app.component.html","webpack:///apps/client/src/app/app.module.ts","webpack:///apps/client/src/app/home/home-routing.module.ts","webpack:///apps/client/src/app/home/home.component.ts","webpack:///apps/client/src/app/home/home.module.ts","webpack:///apps/client/src/app/shell/menu-item.ts","webpack:///apps/client/src/app/shell/shell.component.ts","webpack:///apps/client/src/app/shell/shell.component.html","webpack:///apps/client/src/app/shell/shell.module.ts","webpack:///apps/client/src/app/shell/shell.service.ts","webpack:///apps/client/src/environments/.env.ts","webpack:///apps/client/src/environments/environment.ts","webpack:///apps/client/src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","log","Logger","LAZY_WIDGETS","InjectionToken","lazyWidgets","path","loadChildren","m","AvatarModule","CardModule","PanelBarModule","SplitterModule","StepperModule","lazyArrayToObj","result","w","CoreModule","parentModule","debug","CoreService","ApiService","provide","API_BASE_URL","useValue","environment","serverUrl","useFactory","HTTP_INTERCEPTORS","useClass","ApiPrefixInterceptor","multi","ErrorHandlerInterceptor","RouteReuseStrategy","RouteReusableStrategy","CommonModule","HttpClientModule","RouterModule","NgModule","imports","providers","Optional","SkipSelf","ModuleLoaderService","injector","compiler","name","container","tempModule","NgModuleFactory","moduleFactory","compileModuleAsync","entryComponent","moduleType","entry","moduleRef","create","compFactory","componentFactoryResolver","resolveComponentFactory","createComponent","Injectable","providedIn","Inject","request","next","test","url","clone","handle","pipe","catchError","error","errorHandler","response","production","LogLevel","source","objects","console","Debug","info","Info","warn","Warning","func","level","concat","apply","outputs","forEach","output","route","detachedTree","future","curr","routeConfig","data","reuse","http","baseUrl","jsonParseReviver","undefined","url_","replace","options_","observe","responseType","headers","HttpHeaders","response_","processGetAllMenu","HttpResponseBase","status","responseBlob","HttpResponse","body","Blob","_headers","key","get","blobToText","_responseText","result200","resultData200","JSON","parse","Array","isArray","item","push","MenuEntity","fromJS","throwException","content_","stringify","processCreateMenu","result201","resultData201","processUpdateMenu","processSeedMenu","processCreateManyMenu","encodeURIComponent","processDeleteMenu","processGetMenuById","processGetContacts","ContactEntity","processGetContactById","HttpClient","property","hasOwnProperty","_data","title","icon","init","createdAt","avatar","position","SwaggerException","message","isSwaggerException","obj","blob","Observable","observer","complete","reader","FileReader","onload","event","target","readAsText","ConfigService","apiService","getAllMenu","toPromise","menus","isEmpty","createManyMenu","untilDestroyedSymbol","Symbol","untilDestroyed","instance","destroyMethodName","originalDestroy","hasDestroyFunction","constructor","Subject","arguments","takeUntil","AvatarComponent","getContacts","contacts","Component","selector","templateUrl","styleUrls","LayoutModule","declarations","CardsComponent","scrollViewCards","thumbnailSrc","headerTitle","headerSubtitle","commentsExpanded","postLiked","comments","newCommentTextValue","postLikes","scrollViewItems","encapsulation","ViewEncapsulation","None","ScrollViewModule","FormsModule","ScrollViewCardComponent","CommentActionsComponent","PostCommentComponent","card","postLikesCount","commentClick","Input","comment","likes","text","postComment","PanelBarComponent","baseImageUrl","imageName","SplitterComponent","StepperComponent","current","steps","label","optional","LoaderComponent","isLoading","SharedModule","routes","redirectTo","pathMatch","AppRoutingModule","forRoot","preloadingStrategy","PreloadAllModules","AppComponent","AppModule","APP_INITIALIZER","config","load","deps","BrowserModule","BrowserAnimationsModule","ShellModule","HomeModule","bootstrap","Shell","childRoutes","component","HomeComponent","HomeRoutingModule","forChild","MenuItem","Expose","ShellComponent","moduleLoader","items","enableProductionMode","map","value","plainToClass","Object","assign","selected","loadModule","moduleName","clear","r","find","i","ev","ViewContainerRef","onSelect","ViewChild","read","ButtonsModule","DrawerModule","InputsModule","children","env","version","npm_package_version","enableProdMode","platform","platformBrowserDynamic","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMC,GAAG,GAAG,IAAI,iBAAAC,MAAJ,CAAW,YAAX,CAAZ;AAEa,YAAAC,YAAA,GAAe,IAAI,OAAAC,cAAJ,CAA8C,cAA9C,CAAf;AAEA,YAAAC,WAAA,GAAiG,CAC5G;AACEC,UAAI,EAAE,QADR;AAEEC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAO;AAAA,kEAAP;AAAA,WAA2Cd,IAA3C,CAAgD,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACC,YAAN;AAAA,SAAjD,CAAN;AAAA;AAFhB,KAD4G,EAIzG;AACDH,UAAI,EAAE,MADL;AAEDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAO;AAAA,8DAAP;AAAA,WAAuCd,IAAvC,CAA4C,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACE,UAAN;AAAA,SAA7C,CAAN;AAAA;AAFb,KAJyG,EAOzG;AACDJ,UAAI,EAAE,WADL;AAEDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAO;AAAA,wEAAP;AAAA,WAAiDd,IAAjD,CAAsD,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACG,cAAN;AAAA,SAAvD,CAAN;AAAA;AAFb,KAPyG,EAUzG;AACDL,UAAI,EAAE,UADL;AAEDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAO;AAAA,sEAAP;AAAA,WAA+Cd,IAA/C,CAAoD,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACI,cAAN;AAAA,SAArD,CAAN;AAAA;AAFb,KAVyG,EAazG;AACDN,UAAI,EAAE,SADL;AAEDC,kBAAY,EAAE;AAAA,eAAM;AAAA;AAAO;AAAA,oEAAP;AAAA,WAA6Cd,IAA7C,CAAkD,UAAAe,CAAC;AAAA,iBAAIA,CAAC,CAACK,aAAN;AAAA,SAAnD,CAAN;AAAA;AAFb,KAbyG,CAAjG;;AAmBb,aAAgBC,cAAhB,GAAiC;AAC/B,UAAMC,MAAM,GAAG,EAAf;;AAD+B,iDAEf,QAAAV,WAFe;AAAA;;AAAA;AAE/B,4DAA6B;AAAA,cAAlBW,CAAkB;AAC3BD,gBAAM,CAACC,CAAC,CAACV,IAAH,CAAN,GAAiBU,CAAC,CAACT,YAAnB;AACD;AAJ8B;AAAA;AAAA;AAAA;AAAA;;AAK/B,aAAOQ,MAAP;AACD;;AAND;;QAmCaE,U,GACX,oBAAoCC,YAApC,EAA8D;AAAA;;AAC5DjB,SAAG,CAACkB,KAAJ,CAAU,aAAV;;AAEA,UAAID,YAAJ,EAAkB;AAChB,cAAM,IAAIvB,KAAJ,WAAauB,YAAb,yEAAN;AACD;AACF,K;;AAlCH;;YA2BaD;;;;yBAAAA,U,EAAU,YAC6BA,UAD7B,EACuC,EADvC,C;AACuC,O;AAAA,iBAtBjD,CACT,eAAAG,WADS,EAET,cAAAC,UAFS,EAGT;AAACC,eAAO,EAAE,cAAAC,YAAV;AAAwBC,gBAAQ,EAAE,cAAAC,WAAA,CAAYC;AAA9C,OAHS,EAIT;AAACJ,eAAO,EAAE,QAAAnB,YAAV;AAAwBwB,kBAAU,EAAEb;AAApC,OAJS,EAKT;AACEQ,eAAO,EAAE,OAAAM,iBADX;AAEEC,gBAAQ,EAAE,yBAAAC,oBAFZ;AAGEC,aAAK,EAAE;AAHT,OALS,EAUT;AACET,eAAO,EAAE,OAAAM,iBADX;AAEEC,gBAAQ,EAAE,4BAAAG,uBAFZ;AAGED,aAAK,EAAE;AAHT,OAVS,EAeT;AACET,eAAO,EAAE,SAAAW,kBADX;AAEEJ,gBAAQ,EAAE,0BAAAK;AAFZ,OAfS,C;AAmBV,gBAxBQ,CACP,SAAAC,YADO,EAEP,OAAAC,gBAFO,EAGP,SAAAC,YAHO,CAwBR;;;;+EAEUpB,U,EAAU;AAAA,kBAzBnB,SAAAkB,YAyBmB,EAxBnB,OAAAC,gBAwBmB,EAvBnB,SAAAC,YAuBmB;AAAA,O;AAvBP,K;;;2BAuBHpB,U,EAAU;cA3BtB,OAAAqB,QA2BsB;eA3Bb;AACRC,iBAAO,EAAE,CACP,SAAAJ,YADO,EAEP,OAAAC,gBAFO,EAGP,SAAAC,YAHO,CADD;AAMRG,mBAAS,EAAE,CACT,eAAApB,WADS,EAET,cAAAC,UAFS,EAGT;AAACC,mBAAO,EAAE,cAAAC,YAAV;AAAwBC,oBAAQ,EAAE,cAAAC,WAAA,CAAYC;AAA9C,WAHS,EAIT;AAACJ,mBAAO,EAAE,QAAAnB,YAAV;AAAwBwB,sBAAU,EAAEb;AAApC,WAJS,EAKT;AACEQ,mBAAO,EAAE,OAAAM,iBADX;AAEEC,oBAAQ,EAAE,yBAAAC,oBAFZ;AAGEC,iBAAK,EAAE;AAHT,WALS,EAUT;AACET,mBAAO,EAAE,OAAAM,iBADX;AAEEC,oBAAQ,EAAE,4BAAAG,uBAFZ;AAGED,iBAAK,EAAE;AAHT,WAVS,EAeT;AACET,mBAAO,EAAE,SAAAW,kBADX;AAEEJ,oBAAQ,EAAE,0BAAAK;AAFZ,WAfS;AANH,S;AA2Ba,Q;;gBAC6BjB,U;AAAU;kBAA/C,OAAAwB;AAA+C,a;kBAAnC,OAAAC;WAAmC;;;;;QAajDC,mB;AACX,mCAAoBC,QAApB,EAAgDC,QAAhD,EAAkGxC,WAAlG,EAAmL;AAAA;;AAA/J,aAAAuC,QAAA,GAAAA,QAAA;AAA4B,aAAAC,QAAA,GAAAA,QAAA;AAAkD,aAAAxC,WAAA,GAAAA,WAAA;AACjG;;;;6BAEUyC,I,EAAcC,S,EAA6B;;;;;;;;AACjC,2BAAM,KAAK1C,WAAL,CAAiByC,IAAjB,GAAN;;;AAAbE,8B;;0BAGFA,UAAU,YAAY,OAAAC,e;;;;;AAExBC,iCAAa,GAAGF,UAAhB;;;;;;AAGgB,2BAAM,KAAKH,QAAL,CAAcM,kBAAd,CAAiCH,UAAjC,CAAN;;;AAAhBE,iC;;;AAGIE,kC,GAAkBF,aAAa,CAACG,UAAd,CAAiCC,K;AACnDC,6B,GAAYL,aAAa,CAACM,MAAd,CAAqB,KAAKZ,QAA1B,C;AAEZa,+B,GAAcF,SAAS,CAACG,wBAAV,CAAmCC,uBAAnC,CAA2DP,cAA3D,C;AAEpBL,6BAAS,CAACa,eAAV,CAA0BH,WAA1B;;;;;;;;;AACD;;;;;;AAzBH;;;uBAGad,mB,EAAmB,wB,EAAA,wB,EAAA,YAC8C,QAAAxC,YAD9C,C;AAC0D,K;;;aAD7EwC,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;2BAEDA,mB,EAAmB;cAH/B,OAAAkB,UAG+B;eAHpB;AACVC,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;kBACuC,OAAAC,M;mBAAO,QAAA5D,Y;;;;;;;;;;;;;;;;;;;;;;;;;ACtF9E;AAAA;AAAA;;AAGA;AAAA;AAAA;;;;;;QASa2B,oB;;;;;;;kCACDkC,O,EAA2BC,I,EAAiB;AACpD,cAAI,CAAC,kBAAkBC,IAAlB,CAAuBF,OAAO,CAACG,GAA/B,CAAL,EAA0C;AACxCH,mBAAO,GAAGA,OAAO,CAACI,KAAR,CAAc;AAAED,iBAAG,EAAE,cAAA1C,WAAA,CAAYC,SAAZ,GAAwBsC,OAAO,CAACG;AAAvC,aAAd,CAAV;AACD;;AACD,iBAAOF,IAAI,CAACI,MAAL,CAAYL,OAAZ,CAAP;AACD;;;;;;AATH;;;uBAGalC,oB;AAAoB,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;2BAEDA,oB,EAAoB;cAHhC,OAAA+B,UAGgC;eAHrB;AACVC,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;ACZjC;AAAA;AAAA;;AAGA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAM7D,GAAG,GAAG,IAAI,iBAAAC,MAAJ,CAAW,yBAAX,CAAZ;;QAQa8B,uB;;;;;;;kCACDgC,O,EAA2BC,I,EAAiB;AACpD,iBAAOA,IAAI,CAACI,MAAL,CAAYL,OAAZ,EAAqBM,IAArB,CAA0B,YAAAC,UAAA,CAAW,UAACC,KAAD;AAAA,mBAAWxC,uBAAuB,CAACyC,YAAxB,CAAqCD,KAArC,CAAX;AAAA,WAAX,CAA1B,CAAP;AACD;;;qCAG2BE,Q,EAAwB;AAClD,cAAI,CAAC,cAAAjD,WAAA,CAAYkD,UAAjB,EAA6B;AAE3B1E,eAAG,CAACuE,KAAJ,CAAU,eAAV,EAA2BE,QAA3B;AACD;;AACD,gBAAMA,QAAN;AACD;;;;;;AAfH;;;uBAGa1C,uB;AAAuB,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBAFtB;;;;2BAEDA,uB,EAAuB;cAHnC,OAAA6B,UAGmC;eAHxB;AACVC,oBAAU,EAAE;AADF,S;AAGwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBpC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AC+BA,QAAYc,QAAZ;;AAAA,eAAYA,QAAZ,EAAoB;AAClB;AACA;AACA;AACA;AACA;AACD,KAND,EAAYA,QAAQ,GAAR,QAAAA,QAAA,aAAAA,QAAA,GAAQ,EAAR,CAAZ;;QAaa1E,M;AAoBX,sBAAoB2E,MAApB,EAAqC;AAAA;;AAAjB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;gCAMd;AAAA,4CAAhBC,OAAgB;AAAhBA,mBAAgB;AAAA;;AACvB,eAAK7E,GAAL,CAAS8E,OAAO,CAAC9E,GAAjB,EAAsB2E,QAAQ,CAACI,KAA/B,EAAsCF,OAAtC;AACD;;;+BAMuB;AAAA,6CAAhBA,OAAgB;AAAhBA,mBAAgB;AAAA;;AACtB,eAAK7E,GAAL,CAAS8E,OAAO,CAACE,IAAjB,EAAuBL,QAAQ,CAACM,IAAhC,EAAsCJ,OAAtC;AACD;;;+BAMuB;AAAA,6CAAhBA,OAAgB;AAAhBA,mBAAgB;AAAA;;AACtB,eAAK7E,GAAL,CAAS8E,OAAO,CAACI,IAAjB,EAAuBP,QAAQ,CAACQ,OAAhC,EAAyCN,OAAzC;AACD;;;gCAMwB;AAAA,6CAAhBA,OAAgB;AAAhBA,mBAAgB;AAAA;;AACvB,eAAK7E,GAAL,CAAS8E,OAAO,CAACP,KAAjB,EAAwBI,QAAQ,CAACjF,KAAjC,EAAwCmF,OAAxC;AACD;;;4BAEWO,I,EAAgCC,K,EAAiBR,O,EAAgB;AAAA;;AAC3E,cAAIQ,KAAK,IAAIpF,MAAM,CAACoF,KAApB,EAA2B;AACzB,gBAAMrF,GAAG,GAAG,KAAK4E,MAAL,GAAc,CAAC,MAAM,KAAKA,MAAX,GAAoB,GAArB,EAA0BU,MAA1B,CAAiCT,OAAjC,CAAd,GAA0DA,OAAtE;AACAO,gBAAI,CAACG,KAAL,CAAWT,OAAX,EAAoB9E,GAApB;AACAC,kBAAM,CAACuF,OAAP,CAAeC,OAAf,CAAuB,UAACC,MAAD;AAAA,qBAAYA,MAAM,CAACH,KAAP,CAAaG,MAAb,GAAsB,KAAI,CAACd,MAA3B,EAAmCS,KAAnC,4BAA6CR,OAA7C,GAAZ;AAAA,aAAvB;AACD;AACF;;;+CA5C6B;AAC5B5E,gBAAM,CAACoF,KAAP,GAAeV,QAAQ,CAACQ,OAAxB;AACD;;;;;;AAlBH;AAKS,WAAAE,KAAA,GAAQV,QAAQ,CAACI,KAAjB;AAKA,WAAAS,OAAA,GAAuB,EAAvB;;;;;;;;;;;;;;;;;;;;AC3DT;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAQavD,qB;;;;;;;;;;;;;qCACS0D,K,EAA6B;AAC/C,iBAAO,KAAP;AACD;;;8BAEYA,K,EAA+BC,Y,EAAwC,CAAU;;;qCAE1ED,K,EAA6B;AAC/C,iBAAO,KAAP;AACD;;;iCAEeA,K,EAA6B;AAC3C,iBAAO,IAAP;AACD;;;yCAEuBE,M,EAAgCC,I,EAA4B;AAClF,iBAAOD,MAAM,CAACE,WAAP,KAAuBD,IAAI,CAACC,WAA5B,IAA2CF,MAAM,CAACG,IAAP,CAAYC,KAA9D;AACD;;;;MAjBwC,SAAAjE,kB;;AAD3C;;;qDACaC,qB;AAAqB,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB;;sEAArBA,qB;;;2BAAAA,qB,EAAqB;cADjC,OAAA2B;AACiC,Q;;;;;;;;;;;;;;;;;;;;;;ACAlC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEa,YAAAtC,YAAA,GAAe,IAAI,OAAAnB,cAAJ,CAA2B,cAA3B,CAAf;;QAgCAiB,U;AAKT,0BAAgC8E,IAAhC,EAAoFC,OAApF,EAAsG;AAAA;;AAF5F,aAAAC,gBAAA,GAAmEC,SAAnE;AAGN,aAAKH,IAAL,GAAYA,IAAZ;AACA,aAAKC,OAAL,GAAeA,OAAO,GAAGA,OAAH,GAAa,EAAnC;AACH;;;;qCAES;AAAA;;AACN,cAAIG,IAAI,GAAG,KAAKH,OAAL,GAAe,UAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,MAAI,CAACC,iBAAL,CAAuBD,SAAvB,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,MAAI,CAACD,iBAAL,CAA4BD,SAA5B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAsC,kBAAiBA,CAAjB,CAAtC;AACH;AACJ,aAND,MAOI,OAAsC,kBAAiBoH,SAAjB,CAAtC;AACP,WATQ,CAFF,CAAP;AAYH;;;0CAE2BpC,Q,EAA0B;AAAA;;AAClD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,wDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,qEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,MAAI,CAACrB,gBAA/B,CAAlD;;AACA,kBAAI0B,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;AAC9BD,yBAAS,GAAG,EAAZ;;AAD8B,4DAEbC,aAFa;AAAA;;AAAA;AAE9B;AAAA,wBAASK,IAAT;AACIN,6BAAU,CAACO,IAAX,CAAgBC,UAAU,CAACC,MAAX,CAAkBH,IAAlB,CAAhB;AADJ;AAF8B;AAAA;AAAA;AAAA;AAAA;AAIjC;;AACD,qBAAO,UAAcN,SAAd,CAAP;AACC,aAToC,CAA9B,CAAP;AAUH,WAXD,MAWO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAiC,IAAjC,CAAP;AACH;;;mCAKUF,I,EAAgB;AAAA;;AACvB,cAAIb,IAAI,GAAG,KAAKH,OAAL,GAAe,UAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAM8B,QAAQ,GAAGT,IAAI,CAACU,SAAL,CAAenB,IAAf,CAAjB;AAEA,cAAIX,QAAQ,GAAS;AACjBW,gBAAI,EAAEkB,QADW;AAEjB5B,mBAAO,EAAE,UAFQ;AAGjBC,wBAAY,EAAE,MAHG;AAIjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,8BAAgB,kBADK;AAErB,wBAAU;AAFW,aAAhB;AAJQ,WAArB;AAUA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,MAAlB,EAA0BuC,IAA1B,EAAgCE,QAAhC,EAA0CnC,IAA1C,CAA+C,qBAAoB,UAACwC,SAAD,EAAqB;AAC3F,mBAAO,MAAI,CAAC0B,iBAAL,CAAuB1B,SAAvB,CAAP;AACH,WAFqD,CAA/C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,MAAI,CAACwB,iBAAL,CAA4B1B,SAA5B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAoC,kBAAiBA,CAAjB,CAApC;AACH;AACJ,aAND,MAOI,OAAoC,kBAAiBoH,SAAjB,CAApC;AACP,WATQ,CAFF,CAAP;AAYH;;;0CAE2BpC,Q,EAA0B;AAAA;;AAClD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,wDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,qEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIe,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGhB,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,MAAI,CAACrB,gBAA/B,CAAlD;AACAoC,uBAAS,GAAGN,UAAU,CAACC,MAAX,CAAkBM,aAAlB,CAAZ;AACA,qBAAO,UAAcD,SAAd,CAAP;AACC,aALoC,CAA9B,CAAP;AAMH,WAPD,MAOO,IAAIxB,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAA+B,IAA/B,CAAP;AACH;;;mCAKUF,I,EAAgB;AAAA;;AACvB,cAAIb,IAAI,GAAG,KAAKH,OAAL,GAAe,UAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAM8B,QAAQ,GAAGT,IAAI,CAACU,SAAL,CAAenB,IAAf,CAAjB;AAEA,cAAIX,QAAQ,GAAS;AACjBW,gBAAI,EAAEkB,QADW;AAEjB5B,mBAAO,EAAE,UAFQ;AAGjBC,wBAAY,EAAE,MAHG;AAIjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,8BAAgB,kBADK;AAErB,wBAAU;AAFW,aAAhB;AAJQ,WAArB;AAUA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,MAAI,CAAC6B,iBAAL,CAAuB7B,SAAvB,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,MAAI,CAAC2B,iBAAL,CAA4B7B,SAA5B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAiC,kBAAiBA,CAAjB,CAAjC;AACH;AACJ,aAND,MAOI,OAAiC,kBAAiBoH,SAAjB,CAAjC;AACP,WATQ,CAFF,CAAP;AAYH;;;0CAE2BpC,Q,EAA0B;AAAA;;AAClD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,wDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,qEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,MAAI,CAACrB,gBAA/B,CAAlD;AACAsB,uBAAS,GAAGC,aAAa,KAAKtB,SAAlB,GAA8BsB,aAA9B,GAAmD,IAA/D;AACA,qBAAO,UAAcD,SAAd,CAAP;AACC,aALoC,CAA9B,CAAP;AAMH,WAPD,MAOO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAA4B,IAA5B,CAAP;AACH;;;mCAEO;AAAA;;AACJ,cAAIf,IAAI,GAAG,KAAKH,OAAL,GAAe,eAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,MAAI,CAAC8B,eAAL,CAAqB9B,SAArB,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,MAAI,CAAC4B,eAAL,CAA0B9B,SAA1B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAsC,kBAAiBA,CAAjB,CAAtC;AACH;AACJ,aAND,MAOI,OAAsC,kBAAiBoH,SAAjB,CAAtC;AACP,WATQ,CAFF,CAAP;AAYH;;;wCAEyBpC,Q,EAA0B;AAAA;;AAChD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,wDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,qEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,MAAI,CAACrB,gBAA/B,CAAlD;;AACA,kBAAI0B,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;AAC9BD,yBAAS,GAAG,EAAZ;;AAD8B,4DAEbC,aAFa;AAAA;;AAAA;AAE9B;AAAA,wBAASK,IAAT;AACIN,6BAAU,CAACO,IAAX,CAAgBC,UAAU,CAACC,MAAX,CAAkBH,IAAlB,CAAhB;AADJ;AAF8B;AAAA;AAAA;AAAA;AAAA;AAIjC;;AACD,qBAAO,UAAcN,SAAd,CAAP;AACC,aAToC,CAA9B,CAAP;AAUH,WAXD,MAWO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAiC,IAAjC,CAAP;AACH;;;uCAKcF,I,EAAkB;AAAA;;AAC7B,cAAIb,IAAI,GAAG,KAAKH,OAAL,GAAe,eAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAM8B,QAAQ,GAAGT,IAAI,CAACU,SAAL,CAAenB,IAAf,CAAjB;AAEA,cAAIX,QAAQ,GAAS;AACjBW,gBAAI,EAAEkB,QADW;AAEjB5B,mBAAO,EAAE,UAFQ;AAGjBC,wBAAY,EAAE,MAHG;AAIjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,8BAAgB,kBADK;AAErB,wBAAU;AAFW,aAAhB;AAJQ,WAArB;AAUA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,MAAlB,EAA0BuC,IAA1B,EAAgCE,QAAhC,EAA0CnC,IAA1C,CAA+C,qBAAoB,UAACwC,SAAD,EAAqB;AAC3F,mBAAO,OAAI,CAAC+B,qBAAL,CAA2B/B,SAA3B,CAAP;AACH,WAFqD,CAA/C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,OAAI,CAAC6B,qBAAL,CAAgC/B,SAAhC,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAsC,kBAAiBA,CAAjB,CAAtC;AACH;AACJ,aAND,MAOI,OAAsC,kBAAiBoH,SAAjB,CAAtC;AACP,WATQ,CAFF,CAAP;AAYH;;;8CAE+BpC,Q,EAA0B;AAAA;;AACtD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,wDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,qEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIe,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGhB,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,OAAI,CAACrB,gBAA/B,CAAlD;;AACA,kBAAI0B,KAAK,CAACC,OAAN,CAAcU,aAAd,CAAJ,EAAkC;AAC9BD,yBAAS,GAAG,EAAZ;;AAD8B,4DAEbC,aAFa;AAAA;;AAAA;AAE9B;AAAA,wBAAST,IAAT;AACIQ,6BAAU,CAACP,IAAX,CAAgBC,UAAU,CAACC,MAAX,CAAkBH,IAAlB,CAAhB;AADJ;AAF8B;AAAA;AAAA;AAAA;AAAA;AAIjC;;AACD,qBAAO,UAAcQ,SAAd,CAAP;AACC,aAToC,CAA9B,CAAP;AAUH,WAXD,MAWO,IAAIxB,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAiC,IAAjC,CAAP;AACH;;;mCAKUtH,E,EAAU;AAAA;;AACjB,cAAIuG,IAAI,GAAG,KAAKH,OAAL,GAAe,eAA1B;AACA,cAAIpG,EAAE,KAAKsG,SAAP,IAAoBtG,EAAE,KAAK,IAA/B,EACI,MAAM,IAAIL,KAAJ,CAAU,qCAAV,CAAN;AACJ4G,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqBsC,kBAAkB,CAAC,KAAK9I,EAAN,CAAvC,CAAP;AACAuG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,QAAlB,EAA4BuC,IAA5B,EAAkCE,QAAlC,EAA4CnC,IAA5C,CAAiD,qBAAoB,UAACwC,SAAD,EAAqB;AAC7F,mBAAO,OAAI,CAACiC,iBAAL,CAAuBjC,SAAvB,CAAP;AACH,WAFuD,CAAjD,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,OAAI,CAAC+B,iBAAL,CAA4BjC,SAA5B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAiC,kBAAiBA,CAAjB,CAAjC;AACH;AACJ,aAND,MAOI,OAAiC,kBAAiBoH,SAAjB,CAAjC;AACP,WATQ,CAFF,CAAP;AAYH;;;0CAE2BpC,Q,EAA0B;AAAA;;AAClD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,yDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,wEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,OAAI,CAACrB,gBAA/B,CAAlD;AACAsB,uBAAS,GAAGC,aAAa,KAAKtB,SAAlB,GAA8BsB,aAA9B,GAAmD,IAA/D;AACA,qBAAO,UAAcD,SAAd,CAAP;AACC,aALoC,CAA9B,CAAP;AAMH,WAPD,MAOO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAA4B,IAA5B,CAAP;AACH;;;oCAKWtH,E,EAAU;AAAA;;AAClB,cAAIuG,IAAI,GAAG,KAAKH,OAAL,GAAe,eAA1B;AACA,cAAIpG,EAAE,KAAKsG,SAAP,IAAoBtG,EAAE,KAAK,IAA/B,EACI,MAAM,IAAIL,KAAJ,CAAU,qCAAV,CAAN;AACJ4G,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqBsC,kBAAkB,CAAC,KAAK9I,EAAN,CAAvC,CAAP;AACAuG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,OAAI,CAACkC,kBAAL,CAAwBlC,SAAxB,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,OAAI,CAACgC,kBAAL,CAA6BlC,SAA7B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAsC,kBAAiBA,CAAjB,CAAtC;AACH;AACJ,aAND,MAOI,OAAsC,kBAAiBoH,SAAjB,CAAtC;AACP,WATQ,CAFF,CAAP;AAYH;;;2CAE4BpC,Q,EAA0B;AAAA;;AACnD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,yDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,wEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,OAAI,CAACrB,gBAA/B,CAAlD;;AACA,kBAAI0B,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;AAC9BD,yBAAS,GAAG,EAAZ;;AAD8B,6DAEbC,aAFa;AAAA;;AAAA;AAE9B;AAAA,wBAASK,IAAT;AACIN,6BAAU,CAACO,IAAX,CAAgBC,UAAU,CAACC,MAAX,CAAkBH,IAAlB,CAAhB;AADJ;AAF8B;AAAA;AAAA;AAAA;AAAA;AAIjC;;AACD,qBAAO,UAAcN,SAAd,CAAP;AACC,aAToC,CAA9B,CAAP;AAUH,WAXD,MAWO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAiC,IAAjC,CAAP;AACH;;;sCAEU;AAAA;;AACP,cAAIf,IAAI,GAAG,KAAKH,OAAL,GAAe,cAA1B;AACAG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,OAAI,CAACmC,kBAAL,CAAwBnC,SAAxB,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,OAAI,CAACiC,kBAAL,CAA6BnC,SAA7B,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAyC,kBAAiBA,CAAjB,CAAzC;AACH;AACJ,aAND,MAOI,OAAyC,kBAAiBoH,SAAjB,CAAzC;AACP,WATQ,CAFF,CAAP;AAYH;;;2CAE4BpC,Q,EAA0B;AAAA;;AACnD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,yDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,wEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,OAAI,CAACrB,gBAA/B,CAAlD;;AACA,kBAAI0B,KAAK,CAACC,OAAN,CAAcJ,aAAd,CAAJ,EAAkC;AAC9BD,yBAAS,GAAG,EAAZ;;AAD8B,6DAEbC,aAFa;AAAA;;AAAA;AAE9B;AAAA,wBAASK,IAAT;AACIN,6BAAU,CAACO,IAAX,CAAgBgB,aAAa,CAACd,MAAd,CAAqBH,IAArB,CAAhB;AADJ;AAF8B;AAAA;AAAA;AAAA;AAAA;AAIjC;;AACD,qBAAO,UAAcN,SAAd,CAAP;AACC,aAToC,CAA9B,CAAP;AAUH,WAXD,MAWO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAoC,IAApC,CAAP;AACH;;;uCAEctH,E,EAAU;AAAA;;AACrB,cAAIuG,IAAI,GAAG,KAAKH,OAAL,GAAe,mBAA1B;AACA,cAAIpG,EAAE,KAAKsG,SAAP,IAAoBtG,EAAE,KAAK,IAA/B,EACI,MAAM,IAAIL,KAAJ,CAAU,qCAAV,CAAN;AACJ4G,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqBsC,kBAAkB,CAAC,KAAK9I,EAAN,CAAvC,CAAP;AACAuG,cAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;AAEA,cAAIC,QAAQ,GAAS;AACjBC,mBAAO,EAAE,UADQ;AAEjBC,wBAAY,EAAE,MAFG;AAGjBC,mBAAO,EAAE,IAAI,OAAAC,WAAJ,CAAgB;AACrB,wBAAU;AADW,aAAhB;AAHQ,WAArB;AAQA,iBAAO,KAAKV,IAAL,CAAUnC,OAAV,CAAkB,KAAlB,EAAyBuC,IAAzB,EAA+BE,QAA/B,EAAyCnC,IAAzC,CAA8C,qBAAoB,UAACwC,SAAD,EAAqB;AAC1F,mBAAO,OAAI,CAACqC,qBAAL,CAA2BrC,SAA3B,CAAP;AACH,WAFoD,CAA9C,EAEHxC,IAFG,CAEE,uBAAiB,UAACwC,SAAD,EAAoB;AAC1C,gBAAIA,SAAS,YAAY,OAAAE,gBAAzB,EAA2C;AACvC,kBAAI;AACA,uBAAO,OAAI,CAACmC,qBAAL,CAAgCrC,SAAhC,CAAP;AACH,eAFD,CAEE,OAAOpH,CAAP,EAAU;AACR,uBAAuC,kBAAiBA,CAAjB,CAAvC;AACH;AACJ,aAND,MAOI,OAAuC,kBAAiBoH,SAAjB,CAAvC;AACP,WATQ,CAFF,CAAP;AAYH;;;8CAE+BpC,Q,EAA0B;AAAA;;AACtD,cAAMuC,MAAM,GAAGvC,QAAQ,CAACuC,MAAxB;AACA,cAAMC,YAAY,GACdxC,QAAQ,YAAY,OAAAyC,YAApB,GAAmCzC,QAAQ,CAAC0C,IAA5C,GACM1C,QAAS,CAACF,KAAV,YAA2B6C,IAA3B,GAAwC3C,QAAS,CAACF,KAAlD,GAA0D8B,SAFpE;AAIA,cAAIgB,QAAQ,GAAQ,EAApB;;AAAwB,cAAI5C,QAAQ,CAACkC,OAAb,EAAsB;AAAA,yDAAkBlC,QAAQ,CAACkC,OAAT,CAAiB/G,IAAjB,EAAlB;AAAA;;AAAA;AAAE,wEAAyC;AAAA,oBAAhC0H,GAAgC;AAAED,wBAAQ,CAACC,GAAD,CAAR,GAAgB7C,QAAQ,CAACkC,OAAT,CAAiBY,GAAjB,CAAqBD,GAArB,CAAhB;AAA4C;AAAzF;AAAA;AAAA;AAAA;AAAA;AAA0F;;AACxI,cAAIN,MAAM,KAAK,GAAf,EAAoB;AAChB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,kBAAIC,SAAS,GAAQ,IAArB;AACA,kBAAIC,aAAa,GAAGF,aAAa,KAAK,EAAlB,GAAuB,IAAvB,GAA8BG,IAAI,CAACC,KAAL,CAAWJ,aAAX,EAA0B,OAAI,CAACrB,gBAA/B,CAAlD;AACAsB,uBAAS,GAAGuB,aAAa,CAACd,MAAd,CAAqBR,aAArB,CAAZ;AACA,qBAAO,UAAcD,SAAd,CAAP;AACC,aALoC,CAA9B,CAAP;AAMH,WAPD,MAOO,IAAIV,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,cAAD,EAAiBpB,MAAjB,EAAyBS,aAAzB,EAAwCJ,QAAxC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,YAAD,EAAepB,MAAf,EAAuBS,aAAvB,EAAsCJ,QAAtC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAf,EAAoB;AACvB,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,eAAD,EAAkBpB,MAAlB,EAA0BS,aAA1B,EAAyCJ,QAAzC,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH,WAJM,MAIA,IAAIL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACzC,mBAAOQ,UAAU,CAACP,YAAD,CAAV,CAAyB5C,IAAzB,CAA8B,qBAAoB,UAAAoD,aAAa,EAAI;AAC1E,qBAAOW,cAAc,CAAC,sCAAD,EAAyCpB,MAAzC,EAAiDS,aAAjD,EAAgEJ,QAAhE,CAArB;AACC,aAFoC,CAA9B,CAAP;AAGH;;AACD,iBAAO,UAAkC,IAAlC,CAAP;AACH;;;;;;AA/lBL;;;uBAGajG,U,EAAU,YAKC,OAAA+H,UALD,C,EAKW,YAAwC,QAAA7H,YAAxC,EAAoD,CAApD,C;AAAoD,K;;;aALzEF,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFP;;;;2BAEHA,U,EAAU;cAHtB,OAAAwC,UAGsB;eAHX;AACRC,oBAAU,EAAE;AADJ,S;AAGW,Q;;;;kBAKN,OAAAC,M;mBAAO,OAAAqF,U;;;;;kBAA+B,OAAA3G;;kBAAY,OAAAsB,M;mBAAO,QAAAxC,Y;;;;;;QA0lB7D4G,U;AAMT,0BAAYlC,IAAZ,EAAgC;AAAA;;AAC5B,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAIoD,QAAT,IAAqBpD,IAArB,EAA2B;AACvB,gBAAIA,IAAI,CAACqD,cAAL,CAAoBD,QAApB,CAAJ,EACU,KAAMA,QAAN,IAAwBpD,IAAK,CAACoD,QAAD,CAA7B;AACb;AACJ;AACJ;;;;6BAEIE,K,EAAa;AACd,cAAIA,KAAJ,EAAW;AACP,iBAAKvJ,EAAL,GAAUuJ,KAAK,CAAC,IAAD,CAAf;AACA,iBAAKC,KAAL,GAAaD,KAAK,CAAC,OAAD,CAAlB;AACA,iBAAKzJ,MAAL,GAAcyJ,KAAK,CAAC,QAAD,CAAnB;AACA,iBAAKE,IAAL,GAAYF,KAAK,CAAC,MAAD,CAAjB;AACH;AACJ;;;+BASMtD,I,EAAY;AACfA,cAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,EAAzC;AACAA,cAAI,CAAC,IAAD,CAAJ,GAAa,KAAKjG,EAAlB;AACAiG,cAAI,CAAC,OAAD,CAAJ,GAAgB,KAAKuD,KAArB;AACAvD,cAAI,CAAC,QAAD,CAAJ,GAAiB,KAAKnG,MAAtB;AACAmG,cAAI,CAAC,MAAD,CAAJ,GAAe,KAAKwD,IAApB;AACA,iBAAOxD,IAAP;AACH;;;+BAdaA,I,EAAS;AACnBA,cAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,EAAzC;AACA,cAAIlF,MAAM,GAAG,IAAIoH,UAAJ,EAAb;AACApH,gBAAM,CAAC2I,IAAP,CAAYzD,IAAZ;AACA,iBAAOlF,MAAP;AACH;;;;;;AA7BL;;QAgDamI,a;AAOT,6BAAYjD,IAAZ,EAAmC;AAAA;;AAC/B,YAAIA,IAAJ,EAAU;AACN,eAAK,IAAIoD,QAAT,IAAqBpD,IAArB,EAA2B;AACvB,gBAAIA,IAAI,CAACqD,cAAL,CAAoBD,QAApB,CAAJ,EACU,KAAMA,QAAN,IAAwBpD,IAAK,CAACoD,QAAD,CAA7B;AACb;AACJ;AACJ;;;;6BAEIE,K,EAAa;AACd,cAAIA,KAAJ,EAAW;AACP,iBAAKvJ,EAAL,GAAUuJ,KAAK,CAAC,IAAD,CAAf;AACA,iBAAKI,SAAL,GAAiBJ,KAAK,CAAC,WAAD,CAAtB;AACA,iBAAKzG,IAAL,GAAYyG,KAAK,CAAC,MAAD,CAAjB;AACA,iBAAKK,MAAL,GAAcL,KAAK,CAAC,QAAD,CAAnB;AACA,iBAAKM,QAAL,GAAgBN,KAAK,CAAC,UAAD,CAArB;AACH;AACJ;;;+BASMtD,I,EAAY;AACfA,cAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,EAAzC;AACAA,cAAI,CAAC,IAAD,CAAJ,GAAa,KAAKjG,EAAlB;AACAiG,cAAI,CAAC,WAAD,CAAJ,GAAoB,KAAK0D,SAAzB;AACA1D,cAAI,CAAC,MAAD,CAAJ,GAAe,KAAKnD,IAApB;AACAmD,cAAI,CAAC,QAAD,CAAJ,GAAiB,KAAK2D,MAAtB;AACA3D,cAAI,CAAC,UAAD,CAAJ,GAAmB,KAAK4D,QAAxB;AACA,iBAAO5D,IAAP;AACH;;;+BAfaA,I,EAAS;AACnBA,cAAI,GAAG,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkC,EAAzC;AACA,cAAIlF,MAAM,GAAG,IAAImI,aAAJ,EAAb;AACAnI,gBAAM,CAAC2I,IAAP,CAAYzD,IAAZ;AACA,iBAAOlF,MAAP;AACH;;;;;;AA/BL;;QAoDa+I,gB;;;;;AAOT,gCAAYC,OAAZ,EAA6B9C,MAA7B,EAA6CvC,QAA7C,EAA+DkC,OAA/D,EAAiG7F,MAAjG,EAA8G;AAAA;;AAAA;;AAC1G;AASM,gBAAAiJ,kBAAA,GAAqB,IAArB;AAPN,gBAAKD,OAAL,GAAeA,OAAf;AACA,gBAAK9C,MAAL,GAAcA,MAAd;AACA,gBAAKvC,QAAL,GAAgBA,QAAhB;AACA,gBAAKkC,OAAL,GAAeA,OAAf;AACA,gBAAK7F,MAAL,GAAcA,MAAd;AAP0G;AAQ7G;;;;2CAIyBkJ,G,EAAQ;AAC9B,iBAAOA,GAAG,CAACD,kBAAJ,KAA2B,IAAlC;AACH;;;;qCArBiCrK,K;;AAAtC;;AAwBA,aAAS0I,cAAT,CAAwB0B,OAAxB,EAAyC9C,MAAzC,EAAyDvC,QAAzD,EAA2EkC,OAA3E,EAA6G7F,MAA7G,EAAyH;AACrH,UAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKuF,SAAlC,EACI,OAAO,kBAAiBvF,MAAjB,CAAP,CADJ,KAGI,OAAO,kBAAiB,IAAI+I,gBAAJ,CAAqBC,OAArB,EAA8B9C,MAA9B,EAAsCvC,QAAtC,EAAgDkC,OAAhD,EAAyD,IAAzD,CAAjB,CAAP;AACP;;AAED,aAASa,UAAT,CAAoByC,IAApB,EAA6B;AACzB,aAAO,IAAI,OAAAC,UAAJ,CAAuB,UAACC,QAAD,EAAmB;AAC7C,YAAI,CAACF,IAAL,EAAW;AACPE,kBAAQ,CAACnG,IAAT,CAAc,EAAd;AACAmG,kBAAQ,CAACC,QAAT;AACH,SAHD,MAGO;AACH,cAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,gBAAM,CAACE,MAAP,GAAgB,UAAAC,KAAK,EAAI;AACrBL,oBAAQ,CAACnG,IAAT,CAAoBwG,KAAK,CAACC,MAAN,CAAc3J,MAAlC;AACAqJ,oBAAQ,CAACC,QAAT;AACH,WAHD;;AAIAC,gBAAM,CAACK,UAAP,CAAkBT,IAAlB;AACH;AACJ,OAZM,CAAP;AAaH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9xBD;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMjK,GAAG,GAAG,IAAI,iBAAAC,MAAJ,CAAW,eAAX,CAAZ;;QAKa0K,a;AACX,6BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAClB5K,WAAG,CAACkB,KAAJ,CAAU,eAAV;AACD;;;;+BAEgB;;;;;;;AACflB,uBAAG,CAACkB,KAAJ,CAAU,QAAV;;AACc,2BAAM,KAAK0J,UAAL,CAAgBC,UAAhB,GAA6BC,SAA7B,EAAN;;;AAARC,yB;;yBAEF,QAAAC,OAAA,CAAQD,KAAR,C;;;;;;AACF,2BAAM,KAAKH,UAAL,CAAgBK,cAAhB,CAA6C,CACjD;AAAC1B,2BAAK,EAAE,QAAR;AAAkBC,0BAAI,EAAE,UAAxB;AAAoC3J,4BAAM,EAAE;AAA5C,qBADiD,EAEjD;AAAC0J,2BAAK,EAAE,MAAR;AAAgBC,0BAAI,EAAE,WAAtB;AAAmC3J,4BAAM,EAAE;AAA3C,qBAFiD,EAGjD;AAAC0J,2BAAK,EAAE,UAAR;AAAoBC,0BAAI,EAAE,UAA1B;AAAsC3J,4BAAM,EAAE;AAA9C,qBAHiD,EAIjD;AAAC0J,2BAAK,EAAE,UAAR;AAAoBC,0BAAI,EAAE,qBAA1B;AAAiD3J,4BAAM,EAAE;AAAzD,qBAJiD,EAKjD;AAAC0J,2BAAK,EAAE,SAAR;AAAmBC,0BAAI,EAAE,mBAAzB;AAA8C3J,4BAAM,EAAE;AAAtD,qBALiD,CAA7C,EAMHiL,SANG,EAAN;;;sDAQKxL,OAAO,CAACC,OAAR,CAAgB,IAAhB,C;;;;;;;;;AACR;;;;;;AAtBH;;;uBAGaoL,a,EAAa,0B;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;2BAEDA,a,EAAa;cAHzB,OAAA/G,UAGyB;eAHd;AACVC,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;ACX1B;AAAA;AAAA;;;;;;QAKa1C,W,GAEX,uBAAc;AAAA;AACb,K;;AANH;;;uBAGaA,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;2BAEDA,W,EAAW;cAHvB,OAAAyC,UAGuB;eAHZ;AACVC,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;;;ACLxB;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA,QAAMqH,oBAAoB,GAAGC,MAAM,CAAC,gBAAD,CAAnC;;AAiCA,aAAgBC,cAAhB,CAA+BC,QAA/B,EAA4F;AAAA,UAA3CC,iBAA2C,uEAAf,aAAe;AAC1F,aAAO,UAAI1G,MAAJ,EAA8B;AACnC,YAAM2G,eAAe,GAAGF,QAAQ,CAACC,iBAAD,CAAhC;AACA,YAAME,kBAAkB,GAAG,OAAOD,eAAP,KAA2B,UAAtD;;AAEA,YAAI,CAACC,kBAAL,EAAyB;AACvB,gBAAM,IAAI9L,KAAJ,WACD2L,QAAQ,CAACI,WAAT,CAAqB5I,IADpB,4DAC0EyI,iBAD1E,EAAN;AAGD;;AAED,YAAI,CAACD,QAAQ,CAACH,oBAAD,CAAb,EAAqC;AACnCG,kBAAQ,CAACH,oBAAD,CAAR,GAAiC,IAAI,OAAAQ,OAAJ,EAAjC;;AAEAL,kBAAQ,CAACC,iBAAD,CAAR,GAA8B,YAAY;AACxC,gBAAIE,kBAAJ,EAAwB;AACtBD,6BAAe,CAAChG,KAAhB,CAAsB,IAAtB,EAA4BoG,SAA5B;AACD;;AACDN,oBAAQ,CAACH,oBAAD,CAAR,CAA+BlH,IAA/B;AACAqH,oBAAQ,CAACH,oBAAD,CAAR,CAA+Bd,QAA/B;AACD,WAND;AAOD;;AAED,eAAOxF,MAAM,CAACP,IAAP,CAAY,YAAAuH,SAAA,CAAaP,QAAQ,CAACH,oBAAD,CAArB,CAAZ,CAAP;AACD,OAvBD;AAwBD;;AAzBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACAE;AACE;AAAA;AACE;AAAA;AACA;AAAA;AACE;AAAA;AAAI;AAAkB;AACtB;AAAA;AAAG;AAAsB;AAC3B;AAAA;AACF;AAAA;AACF;AAAA;;;;;AANkB;AAAA,yCAAkB,UAAlB,EAAkB,iBAAlB;AAER;AAAA;AACD;AAAA;;;;;;AAPX;AACE;AAAA;AAA0B;AAAQ;AAClC;AAAA;AASF;AAAA;;;;;AATuB;AAAA;;;;QDOVW,e;AAGX,+BAAoBjB,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AACnB;;;;mCAEgB;;;;;;;;AACE,2BAAM,KAAKA,UAAL,CAAgBkB,WAAhB,GAA8BhB,SAA9B,EAAN;;;AAAXrG,4B;;AACN,wBAAI,CAAC,QAAAuG,OAAA,CAAQvG,QAAR,CAAL,EAAuB;AACrB,2BAAKsH,QAAL,GAAgBtH,QAAhB;AACD;;;;;;;;;AACF;;;;;;AAhBH;;;uBAKaoH,e,EAAe,mC;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,oL;AAAA;AAAA;ACT5B;AAYA;;;;AAZkB;;;;;;;;2BDSLA,e,EAAe;cAL3B,OAAAG,SAK2B;eALjB;AACTC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAUa3L,Y;;;;AAPb;AAQS,iBAAA6C,KAAA,GAAQ,mBAAAwI,eAAR;;YADIrL;;;;yBAAAA,Y;AAAY,O;AAAA,gBANd,CACP,SAAA0B,YADO,EAEP,uBAAAkK,YAFO,CAMc;;;;+EAAZ5L,Y,EAAY;AAAA,uBAFR,mBAAAqL,eAEQ;AAFO,kBAH5B,SAAA3J,YAG4B,EAF5B,uBAAAkK,YAE4B;AAEP,O;AAJT,K;;;2BAIH5L,Y,EAAY;cAPxB,OAAA6B,QAOwB;eAPf;AACRC,iBAAO,EAAE,CACP,SAAAJ,YADO,EAEP,uBAAAkK,YAFO,CADD;AAKRC,sBAAY,EAAE,CAAC,mBAAAR,eAAD;AALN,S;AAOe,Q;;;;;;;;;;;;;;;;;;;;;;ACbzB;AAAA;AAAA;;;;;;;;;;;;;;;;ACCE;AACE;AAAA;AACF;AAAA;;;;;AADmB;AAAA;;;;QDORS,c,GAkCX,0BAAc;AAAA;;AAjCP,WAAAC,eAAA,GAAyC,CAC9C;AACE,wBAAgB,4FADlB;AAEE,uBAAe,eAFjB;AAGE,0BAAkB,kBAHpB;AAIE,4BAAoB,KAJtB;AAKE,qBAAa,KALf;AAME,oBAAY,EANd;AAOE,qBAAa,GAPf;AAQE,+BAAuB,EARzB;AASE,2BAAmB,CACjB;AAAC,iBAAO;AAAR,SADiB,EAEjB;AAAC,iBAAO;AAAR,SAFiB,EAGjB;AAAC,iBAAO;AAAR,SAHiB;AATrB,OAD8C,EAgB9C;AACEC,oBAAY,EAAE,+FADhB;AAEEC,mBAAW,EAAE,cAFf;AAGEC,sBAAc,EAAE,kBAHlB;AAIEC,wBAAgB,EAAE,KAJpB;AAKEC,iBAAS,EAAE,KALb;AAMEC,gBAAQ,EAAE,EANZ;AAOEC,2BAAmB,EAAE,EAPvB;AAQEC,iBAAS,EAAE,GARb;AASEC,uBAAe,EAAE,CACf;AAAC9I,aAAG,EAAE;AAAN,SADe,EAEf;AAACA,aAAG,EAAE;AAAN,SAFe,EAGf;AAACA,aAAG,EAAE;AAAN,SAHe;AATnB,OAhB8C,CAAzC;AAkCN,K;;AAzCH;;;uBAMaoI,c;AAAc,K;;;YAAdA,c;AAAc,+B;AAAA,c;AAAA,a;AAAA,sE;AAAA;AAAA;ACT3B;AACE;AAAA;AAGF;AAAA;AACA;;;;AAJO;AAAA;;;;;;;;;2BDQMA,c,EAAc;cAN1B,OAAAN,SAM0B;eANhB;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET3B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAgBa1M,U;;;;AAdb;AAeS,eAAA4C,KAAA,GAAQ,iBAAAiJ,cAAR;;YADI7L;;;;yBAAAA,U;AAAU,O;AAAA,gBAbZ,CACP,SAAAyB,YADO,EAEP,2BAAAkL,gBAFO,EAGP,uBAAAhB,YAHO,EAIP,QAAAiB,WAJO,CAaY;;;;+EAAV5M,U,EAAU;AAAA,uBANnB,iBAAA6L,cAMmB,EALnB,6BAAAgB,uBAKmB,EAJnB,4BAAAC,uBAImB,EAHnB,yBAAAC,oBAGmB;AAHC,kBATpB,SAAAtL,YASoB,EARpB,2BAAAkL,gBAQoB,EAPpB,uBAAAhB,YAOoB,EANpB,QAAAiB,WAMoB;AAGD,O;AATR,K;;;2BASF5M,U,EAAU;cAdtB,OAAA4B,QAcsB;eAdb;AACRC,iBAAO,EAAE,CACP,SAAAJ,YADO,EAEP,2BAAAkL,gBAFO,EAGP,uBAAAhB,YAHO,EAIP,QAAAiB,WAJO,CADD;AAORhB,sBAAY,EAAE,CACZ,iBAAAC,cADY,EAEZ,6BAAAgB,uBAFY,EAGZ,4BAAAC,uBAHY,EAIZ,yBAAAC,oBAJY;AAPN,S;AAca,Q;;;;;;;;;;;;;;;;;;;;;;ACxBvB;AAAA;AAAA;;;;;;;;;;QASaD,uB;AAGX,yCAAc;AAAA;AACb;;;;qCAEmBE,I,EAAoB;AACtCA,cAAI,CAACd,gBAAL,GAAwB,CAACc,IAAI,CAACd,gBAA9B;AACD;;;uCAEqBc,I,EAAoB;AACxC,cAAIA,IAAI,CAACb,SAAT,EAAoB;AAClBa,gBAAI,CAACV,SAAL,IAAkB,CAAlB;AACD,WAFD,MAEO;AACLU,gBAAI,CAACV,SAAL,IAAkB,CAAlB;AACD;;AAEDU,cAAI,CAACb,SAAL,GAAiB,CAACa,IAAI,CAACb,SAAvB;AACD;;;sCAEoBa,I,EAAoB;AACvC,iBAAOA,IAAI,CAACb,SAAL,GAAiB,kBAAjB,GAAsC,0BAA7C;AACD;;;;;;AA5BH;;;uBAMaW,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,sC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,mL;AAAA;AAAA;ACTpC;AACE;AAAA;AAAgC;AAAA,mBAAS,IAAAG,cAAA,UAAT;AAA6B,WAA7B;AAC9B;AAAA;AACF;AAAA;AACA;AAAA;AAAgC;AAAA,mBAAS,IAAAC,YAAA,UAAT;AAA2B,WAA3B;AAC9B;AAAA;AACF;AAAA;AACA;AAAA;AAAgC;AAAsC;AACxE;AAAA;AACA;AAAA;AAA+B;AAA0B;AACzD;;;;AARU;AAAA;AAOqB;AAAA;;;;;;;;;2BDAlBJ,uB,EAAuB;cANnC,OAAAvB,SAMmC;eANzB;AACTC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMyB,Q;;;;gBACjC,OAAAS;;;;;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEI;AACE;AAAA;AACE;AAAA;AAMA;AAAA;AACA;AAAA;AACE;AAAA;AAA2B;AAAkB;AAC7C;AAAA;AAAmB;AAAM;AAAM;AAAwB;AAAO;AAChE;AAAA;AACF;AAAA;AACA;AAAA;AAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9B;AAAA;AACF;AAAA;AACF;AAAA;;;;;;AAbM;AAAA,wCAAiB,OAAjB,EAAiB,QAAjB,EAAiB,UAAjB,EAAiB,0BAAjB;AAM2B;AAAA;AACI;AAAA;AAI3B;AAAA;;;;;;AAjBd;AACE;AAAA;AACE;AAAA;AAkBF;AAAA;AACF;AAAA;;;;;AAnBqB;AAAA;;;;QDQRJ,oB;;;;;;;0CAGcK,O,EAAY;AACnC,cAAIA,OAAO,CAACC,KAAR,GAAgB,CAApB,EAAuB;AACrBD,mBAAO,CAACC,KAAR,IAAiB,CAAjB;AACD,WAFD,MAEO;AACLD,mBAAO,CAACC,KAAR,IAAiB,CAAjB;AACD;AACF;;;yCAEuBD,O,EAAgB;AACtC,cAAIA,OAAO,IAAIA,OAAO,CAACC,KAAR,GAAgB,CAA/B,EAAkC;AAChC,mBAAO,kBAAP;AACD,WAFD,MAEO;AACL,mBAAO,0BAAP;AACD;AACF;;;oCAEkBL,I,EAAoB;AACrC,cAAIA,IAAI,CAACX,mBAAT,EAA8B;AAC5B,gBAAMe,OAAO,GAAG;AAACE,kBAAI,EAAEN,IAAI,CAACX,mBAAZ;AAAiCgB,mBAAK,EAAE;AAAxC,aAAhB;AACAL,gBAAI,CAACZ,QAAL,CAAc5E,IAAd,CAAmB4F,OAAnB;AACAJ,gBAAI,CAACX,mBAAL,GAA2B,EAA3B;AACD;AACF;;;;;;AA/BH;;;uBAMaU,oB;AAAoB,K;;;YAApBA,oB;AAAoB,mC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,2e;AAAA;AAAA;ACVjC;AAsBA;AAAA;AACE;AAAA;AAAsD;AAAA;AAAA;AAAuC;AAC7F;AAAA;AAA0C;AAAA,mBAAS,IAAAQ,WAAA,UAAT;AAA0B,WAA1B;AAA4B;AAAI;AAC5E;AAAA;AACA;;;;AA1BK;AAuBmD;AAAA;;;;;;;;;2BDb3CR,oB,EAAoB;cANhC,OAAAxB,SAMgC;eANtB;AACTC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMsB,Q;;gBAC9B,OAAAS;;;;;;;;;;;;;;;;;;;;;;;;AEXH;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBM;AAAA;AACF;;;;;AADO;AAAA;AAAqB;AAAuB;;;;;;AATrD;AAQE;AAAA;AAGF;AAAA;;;;;AARE,2DAA6B,OAA7B,EAA6B,MAA7B,EAA6B,QAA7B,EAA6B,OAA7B,EAA6B,QAA7B,EAA6B,IAA7B,EAA6B,UAA7B,EAA6B,IAA7B;;;;;;AAcF;;;;;;AACA;AACE;AAAA;AACF;AAAA;;;;;AADgB;AAAA;;;;QDnBLN,uB;;;;AANb;;;uBAMaA,uB;AAAuB,K;;;YAAvBA,uB;AAAuB,sC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,+c;AAAA;AAAA;ACTpC;AACE;AAAA;AACE;AAAA;AACA;AAAA;AACE;AAAA;AAAmB;AAAsB;AACzC;AAAA;AAAqB;AAAyB;AAChD;AAAA;AACF;AAAA;AAEA;AAAA;AAaA;AAAA;AACE;AAAA;AACF;AAAA;AAEA;AAAA;AACA;AAAA;AAGF;AAAA;AACA;;;;AA/BY;AAEiC;AAAA,2DAA8B,OAA9B,EAA8B,QAA9B;AAEpB;AAAA;AACE;AAAA;AAKvB;AAAA;AAaiB;AAAA;AAGI;AAAA;AACN;AAAA;;;;;;;;;2BDlBNA,uB,EAAuB;cANnC,OAAAtB,SAMmC;eANzB;AACTC,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,mCAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMyB,Q;;gBACjC,OAAAS;;;;;;;;;;;;;;;;;;;;;;;;AEVH;AAAA;AAAA;;;;;;;;;;;;ACIQ;AAAA;AACE;AAAA;AACE;AAAA;AACA;AAAA;AACwB;AAAA;AAAI;AAAa;AACjB;AAAA;AAAG;AAAS;AAChB;AAAA;AACtB;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACwB;AAAA;AAAI;AAAe;AACnB;AAAA;AAAG;AAAe;AACtB;AAAA;AACtB;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACwB;AAAA;AAAI;AAAW;AACf;AAAA;AAAG;AAAuB;AAC9B;AAAA;AACtB;AAAA;AACF;AAAA;AACF;;;;;AArBW;AAAA;AAOA;AAAA;AAOA;AAAA;;;;QDbJK,iB;AALb;AAAA;;AAOE,aAAAC,YAAA,GAAe,0DAAf;AAKD;;;;iCAHiBC,S,EAAmB;AACjC,iBAAO,KAAKD,YAAL,GAAoBC,SAApB,GAAgC,MAAvC;AACD;;;;;;AAXH;;;uBAKaF,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,c;AAAA,8R;AAAA;AAAA;ACP9B;AACE;AAAA;AACE;AAAA;AACE;AAAA;AAyBF;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACF;AAAA;AACA;AAAA;AACF;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACF;AAAA;AACA;AAAA;AACF;AAAA;AACF;AAAA;AACA;;;;AA/CyB;AAAA;AA2BA;AAAA;AACE;AAAA;AACA;AAAA;AACE;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEF;AAAA;AAEF;AAAA;AACE;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEF;AAAA,kDAAyB,UAAzB,EAAyB,IAAzB;;;;;;;;2BDvCZA,iB,EAAiB;cAL7B,OAAAjC,SAK6B;eALnB;AACTC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAUazL,c;;;;AAPb;AAQS,mBAAA2C,KAAA,GAAQ,sBAAA4K,iBAAR;;YADIvN;;;;yBAAAA,c;AAAc,O;AAAA,gBANd,CACL,SAAAwB,YADK,EAEL,uBAAAkK,YAFK,CAMc;;;;+EAAd1L,c,EAAc;AAAA,uBAFV,sBAAAuN,iBAEU;AAFO,kBAH1B,SAAA/L,YAG0B,EAF1B,uBAAAkK,YAE0B;AAEP,O;AAJP,K;;;2BAIP1L,c,EAAc;cAP1B,OAAA2B,QAO0B;eAPjB;AACNC,iBAAO,EAAE,CACL,SAAAJ,YADK,EAEL,uBAAAkK,YAFK,CADH;AAKRC,sBAAY,EAAE,CAAC,sBAAA4B,iBAAD;AALN,S;AAOiB,Q;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA;AAAA;;;;;;;;;;QAOaG,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAEN,CACV;;;;;;AAVH;;;uBAKaA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,+K;AAAA;AAAA;ACP9B;AACE;AAAA;AACE;AAAA;AACE;AAAA;AACE;AAAA;AACE;AAAA;AAAI;AAA0B;AAC9B;AAAA;AAAG;AAA0B;AAC/B;AAAA;AACF;AAAA;AACA;AAAA;AACE;AAAA;AACE;AAAA;AAAI;AAA4B;AAChC;AAAA;AAAG;AAAe;AACpB;AAAA;AACF;AAAA;AACA;AAAA;AACE;AAAA;AACE;AAAA;AAAI;AAA2B;AAC/B;AAAA;AAAG;AAA0B;AAC/B;AAAA;AACF;AAAA;AACF;AAAA;AACF;AAAA;AACA;AAAA;AACE;AAAA;AACE;AAAA;AAAI;AAA4B;AAChC;AAAA;AAAG;AAAe;AACpB;AAAA;AACF;AAAA;AACA;AAAA;AACE;AAAA;AACE;AAAA;AAAI;AAA4B;AAChC;AAAA;AAAG;AAAkC;AACvC;AAAA;AACF;AAAA;AACF;AAAA;AACA;;;;AAjC2B;AAAA;AAYA;AAAA;AAcJ;AAAA;;;;;;;;2BDtBVA,iB,EAAiB;cAL7B,OAAApC,SAK6B;eALnB;AACTC,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAUaxL,c;;;;AAPb;AAQS,mBAAA0C,KAAA,GAAQ,qBAAA+K,iBAAR;;YADIzN;;;;yBAAAA,c;AAAc,O;AAAA,gBANd,CACL,SAAAuB,YADK,EAEL,uBAAAkK,YAFK,CAMc;;;;+EAAdzL,c,EAAc;AAAA,uBAFV,qBAAAyN,iBAEU;AAFO,kBAH1B,SAAAlM,YAG0B,EAF1B,uBAAAkK,YAE0B;AAEP,O;AAJP,K;;;2BAIPzL,c,EAAc;cAP1B,OAAA0B,QAO0B;eAPjB;AACNC,iBAAO,EAAE,CACL,SAAAJ,YADK,EAEL,uBAAAkK,YAFK,CADH;AAKRC,sBAAY,EAAE,CAAC,qBAAA+B,iBAAD;AALN,S;AAOiB,Q;;;;;;;;;;;;;;;;;;;;;;ACb3B;AAAA;AAAA;;;;;;;;;;QAOaC,gB,GALb;AAAA;;AAOS,WAAAC,OAAA,GAAU,CAAV;AAEA,WAAAC,KAAA,GAAQ,CACb;AAACC,aAAK,EAAE,eAAR;AAAyBhF,YAAI,EAAE;AAA/B,OADa,EAEb;AAACgF,aAAK,EAAE,WAAR;AAAqBhF,YAAI,EAAE;AAA3B,OAFa,EAGb;AAACgF,aAAK,EAAE,aAAR;AAAuBhF,YAAI,EAAE,YAA7B;AAA2CiF,gBAAQ,EAAE;AAArD,OAHa,EAIb;AAACD,aAAK,EAAE,SAAR;AAAmBhF,YAAI,EAAE;AAAzB,OAJa,EAKb;AAACgF,aAAK,EAAE,QAAR;AAAkBhF,YAAI,EAAE;AAAxB,OALa,CAAR;AAQR,K;;AAjBD;;;uBAKa6E,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,sF;AAAA;AAAA;ACN7B;AAAA;AAGE;AAAA;AAAA;AAGF;AAAA;AACA;;;;AAFE;AAAA;AAJA,4CAAe,UAAf,EAAe,MAAf,EAAe,aAAf,EAAe,WAAf,EAAe,QAAf,EAAe,KAAf;;;;;;;;2BDKWA,gB,EAAgB;cAL5B,OAAArC,SAK4B;eALlB;AACTC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QAUavL,a;;;;AAPb;AAQS,kBAAAyC,KAAA,GAAQ,oBAAAgL,gBAAR;;YADIzN;;;;yBAAAA,a;AAAa,O;AAAA,gBANb,CACL,SAAAsB,YADK,EAEL,uBAAAkK,YAFK,CAMa;;;;+EAAbxL,a,EAAa;AAAA,uBAFT,oBAAAyN,gBAES;AAFO,kBAHzB,SAAAnM,YAGyB,EAFzB,uBAAAkK,YAEyB;AAEP,O;AAJN,K;;;2BAIPxL,a,EAAa;cAPzB,OAAAyB,QAOyB;eAPhB;AACNC,iBAAO,EAAE,CACL,SAAAJ,YADK,EAEL,uBAAAkK,YAFK,CADH;AAKRC,sBAAY,EAAE,CAAC,oBAAAgC,gBAAD;AALN,S;AAOgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACb1B;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;AAAA;;;;;;QAOaK,e;AAIX,iCAAc;AAAA;;AAHL,aAAAC,SAAA,GAAY,KAAZ;AAGO;;;;mCAEL,CAAE;;;;;;AAXf;;;uBAKaD,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4F;AAAA;AAAA;ACP5B;AACE;AAAA;AAAyC;AAAA;AAAM;AAAa;AAC9D;AAAA;AACA;;;;AAHK;AAC4C;AAAA;;;;;;;2BDMpCA,e,EAAe;cAL3B,OAAA1C,SAK2B;eALjB;AACTC,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;gBACzB,OAAAyB;;;gBACA,OAAAA;;;;;;;;;;;;;;;;;;;;;;;;AETH;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAM5N,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,cAAX,CAAZ;;QAOa2O,Y,GACX,wBAAc;AAAA;;AACZ5O,SAAG,CAACkB,KAAJ,CAAU,aAAV;AACD,K;;AARH;;YAKa0N;;;;yBAAAA,Y;AAAY,O;AAAA,gBAJd,CAAC,SAAA1M,YAAD,CAIc;;;;+EAAZ0M,Y,EAAY;AAAA,uBAHR,mBAAAF,eAGQ;AAHO,kBADpB,SAAAxM,YACoB,CAGP;AAJD,kBAEZ,mBAAAwM,eAFY;AAIC,O;AAFE,K;;;2BAEdE,Y,EAAY;cALxB,OAAAvM,QAKwB;eALf;AACRC,iBAAO,EAAE,CAAC,SAAAJ,YAAD,CADD;AAERmK,sBAAY,EAAE,CAAC,mBAAAqC,eAAD,CAFN;AAGR5O,iBAAO,EAAE,CAAC,mBAAA4O,eAAD;AAHD,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACbzB;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMG,MAAM,GAAW,CAGrB;AAACxO,UAAI,EAAE,IAAP;AAAayO,gBAAU,EAAE,OAAzB;AAAkCC,eAAS,EAAE;AAA7C,KAHqB,CAAvB;;QAaaC,gB;;;;AAPb;;YAOaA;;;;yBAAAA,gB;AAAgB,O;AAAA,iBAFhB,E;AAAE,gBAJJ,CACP,SAAA5M,YAAA,CAAa6M,OAAb,CAAqBJ,MAArB,EAA6B;AAACK,0BAAkB,EAAE,SAAAC;AAArB,OAA7B,CADO,CAII,EADH,SAAA/M,YACG;;;;+EAEF4M,gB,EAAgB;AAAA;AAAA,kBAHjB,SAAA5M,YAGiB;AAAA,O;AAHL,K;;;2BAGX4M,gB,EAAgB;cAP5B,OAAA3M,QAO4B;eAPnB;AACRC,iBAAO,EAAE,CACP,SAAAF,YAAA,CAAa6M,OAAb,CAAqBJ,MAArB,EAA6B;AAACK,8BAAkB,EAAE,SAAAC;AAArB,WAA7B,CADO,CADD;AAIRrP,iBAAO,EAAE,CAAC,SAAAsC,YAAD,CAJD;AAKRG,mBAAS,EAAE;AALH,S;AAOmB,Q;;;;;;;;;;;;;;;;;;;;;;AChB7B;AAAA;AAAA;;AAEA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMvC,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,cAAX,CAAZ;;QAQamP,Y,GAGX,wBAAc;AAAA;;AAFd,WAAA7F,KAAA,GAAQ,QAAR;AAGEvJ,SAAG,CAACkB,KAAJ,CAAU,aAAV;AACD,K;;AAXH;;;uBAMakO,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACZzB;AACA;;;;;;;;;2BDWaA,Y,EAAY;cANxB,OAAApD,SAMwB;eANd;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZzB;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;QA6BakC,S;;;;AA1Bb;;YA0BaA,S;AAAS,kBAFR,gBAAAD,YAEQ;;;;yBAATC,S;AAAS,O;AAAA,iBAVT,CACT;AACEhO,eAAO,EAAE,OAAAiO,eADX;AAEE5N,kBAAU,EAAE,oBAAC6N,MAAD;AAAA,iBAA2B;AAAA,mBAAY,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAC,6BAAMA,MAAM,CAACC,IAAP,EAAN;;AAAD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAX;AAAA,WAA3B;AAAA,SAFd;AAGEC,YAAI,EAAE,CAAC,iBAAA9E,aAAD,CAHR;AAIE7I,aAAK,EAAE;AAJT,OADS,C;AAOV,gBAnBQ,CACP,mBAAA4N,aADO,EAEP,aAAAC,uBAFO,EAGP,OAAAxN,gBAHO,EAIP,QAAAkL,WAJO,EAKP,qBAAA2B,gBALO,EAOP,QAAAhO,UAPO,EAQP,UAAA4N,YARO,EASP,eAAAgB,WATO,EAUP,cAAAC,UAVO,CAmBR;;;;+EAGUR,S,EAAS;AAAA,uBAxBlB,gBAAAD,YAwBkB;AAxBN,kBAGZ,mBAAAM,aAHY,EAIZ,aAAAC,uBAJY,EAKZ,OAAAxN,gBALY,EAMZ,QAAAkL,WANY,EAOZ,qBAAA2B,gBAPY,EASZ,QAAAhO,UATY,EAUZ,UAAA4N,YAVY,EAWZ,eAAAgB,WAXY,EAYZ,cAAAC,UAZY;AAwBM,O;AAZR,K;;;;;2BAYDR,S,EAAS;cA1BrB,OAAAhN,QA0BqB;eA1BZ;AACRgK,sBAAY,EAAE,CACZ,gBAAA+C,YADY,CADN;AAIR9M,iBAAO,EAAE,CACP,mBAAAoN,aADO,EAEP,aAAAC,uBAFO,EAGP,OAAAxN,gBAHO,EAIP,QAAAkL,WAJO,EAKP,qBAAA2B,gBALO,EAOP,QAAAhO,UAPO,EAQP,UAAA4N,YARO,EASP,eAAAgB,WATO,EAUP,cAAAC,UAVO,CAJD;AAgBRtN,mBAAS,EAAE,CACT;AACElB,mBAAO,EAAE,OAAAiO,eADX;AAEE5N,sBAAU,EAAE,oBAAC6N,MAAD;AAAA,qBAA2B;AAAA,uBAAY,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAC,iCAAMA,MAAM,CAACC,IAAP,EAAN;;AAAD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAX;AAAA,eAA3B;AAAA,aAFd;AAGEC,gBAAI,EAAE,CAAC,iBAAA9E,aAAD,CAHR;AAIE7I,iBAAK,EAAE;AAJT,WADS,CAhBH;AAwBRgO,mBAAS,EAAE,CAAC,gBAAAV,YAAD;AAxBH,S;AA0BY,Q;;;;;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;AAEA,QAAMP,MAAM,GAAW,CACrB,gBAAAkB,KAAA,CAAMC,WAAN,CAAkB,CAChB;AAAE3P,UAAI,EAAE,EAAR;AAAYyO,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KADgB,EAEhB;AAAE1O,UAAI,EAAE,MAAR;AAAgB4P,eAAS,EAAE,iBAAAC,aAA3B;AAA0ClK,UAAI,EAAE;AAAEuD,aAAK,EAAE;AAAT;AAAhD,KAFgB,CAAlB,CADqB,CAAvB;;QAYa4G,iB;;;;AALb;;YAKaA;;;;yBAAAA,iB;AAAiB,O;AAAA,iBAFjB,E;AAAE,gBAFJ,CAAC,SAAA/N,YAAA,CAAagO,QAAb,CAAsBvB,MAAtB,CAAD,CAEI,EADH,SAAAzM,YACG;;;;+EAEF+N,iB,EAAiB;AAAA;AAAA,kBAHlB,SAAA/N,YAGkB;AAAA,O;AAHN,K;;;2BAGX+N,iB,EAAiB;cAL7B,OAAA9N,QAK6B;eALpB;AACRC,iBAAO,EAAE,CAAC,SAAAF,YAAA,CAAagO,QAAb,CAAsBvB,MAAtB,CAAD,CADD;AAER/O,iBAAO,EAAE,CAAC,SAAAsC,YAAD,CAFD;AAGRG,mBAAS,EAAE;AAHH,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AClB9B;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMvC,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,eAAX,CAAZ;;QAQaiQ,a,GACX,yBAAc;AAAA;;AACZlQ,SAAG,CAACkB,KAAJ,CAAU,aAAV;AACD,K;;AATH;;;uBAMagP,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,2D;AAAA,itE;AAAA;;;;2BAAbA,a,EAAa;cANzB,OAAAlE,SAMyB;eANf;AACTC,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMe,Q;;;;;;;;;;;;;;;;;;;;;;;;ACX1B;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMnN,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,YAAX,CAAZ;;QAWa4P,U,GACX,sBAAc;AAAA;;AACZ7P,SAAG,CAACkB,KAAJ,CAAU,aAAV;AACD,K;;AAZH;;YASa2O;;;;yBAAAA,U;AAAU,O;AAAA,gBARZ,CACP,SAAA3N,YADO,EAEP,QAAAlB,UAFO,EAGP,UAAA4N,YAHO,EAIP,sBAAAuB,iBAJO,CAQY;;;;+EAAVN,U,EAAU;AAAA,uBAFN,iBAAAK,aAEM;AAFO,kBAL1B,SAAAhO,YAK0B,EAJ1B,QAAAlB,UAI0B,EAH1B,UAAA4N,YAG0B,EAF1B,sBAAAuB,iBAE0B;AAEP,O;AAJF,K;;;2BAIRN,U,EAAU;cATtB,OAAAxN,QASsB;eATb;AACRC,iBAAO,EAAE,CACP,SAAAJ,YADO,EAEP,QAAAlB,UAFO,EAGP,UAAA4N,YAHO,EAIP,sBAAAuB,iBAJO,CADD;AAOR9D,sBAAY,EAAE,CAAC,iBAAA6D,aAAD;AAPN,S;AASa,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBvB;AAAA;AAAA;;QAEaG,Q;;;;;;;6BAqBN/G,K,EAAW,CACf;;;+BAEMtD,I,EAAU,CAChB;;;4BARO;AACN,iBAAO,KAAKuD,KAAZ;AACD;;;;;;AAjBD,gBADC,oBAAA+G,MAAA,EACD,E,iCAAA,G,kBAAA,E,MAAA,E,MAAA;;AAGA,gBADC,oBAAAA,MAAA,EACD,E,iCAAA,G,kBAAA,E,IAAA,E,MAAA;;AAGA,gBADC,oBAAAA,MAAA,EACD,E,iCAAA,G,kBAAA,E,QAAA,E,MAAA;;AAGA,gBADC,oBAAAA,MAAA,EACD,E,iCAAA,G,kBAAA,E,OAAA,E,MAAA;;AAGA,gBADC,oBAAAA,MAAA,EACD,E,kCAAA,G,kBAAA,E,UAAA,E,MAAA;;AAGA,gBADC,oBAAAA,MAAA,EACD,E,iCAAA,E,mCAAA,G,kBAAA,E,MAAA,E,IAAA;;AAjBF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,QAAMtQ,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,gBAAX,CAAZ;;QAQasQ,c;AAOX,8BAAoBC,YAApB,EAA+D5F,UAA/D,EAAuF;AAAA;;AAAnE,aAAA4F,YAAA,GAAAA,YAAA;AAA2C,aAAA5F,UAAA,GAAAA,UAAA;AAFxD,aAAA6F,KAAA,GAAyB,EAAzB;AAGLzQ,WAAG,CAACkB,KAAJ,CAAU,aAAV;AACD;;;;mCAEa;;;;;;;AACZ,wBAAI,cAAAM,WAAA,CAAYkD,UAAhB,EAA4B;AAC1B,8BAAAzE,MAAA,CAAOyQ,oBAAP;AACD;;AAED1Q,uBAAG,CAACkB,KAAJ,CAAU,MAAV;;AACiB,2BAAM,KAAK0J,UAAL,CAAgBC,UAAhB,GAA6BxG,IAA7B,CAAkC,YAAAsM,GAAA,CAAI,UAAAC,KAAK;AAAA,6BAAI,oBAAAC,YAAA,CAAa,YAAAR,QAAb,EAAuBO,KAAvB,CAAJ;AAAA,qBAAT,CAAlC,EAA+E9F,SAA/E,EAAN;;;AAAXrG,4B;;AACN,wBAAI,CAAC,QAAAuG,OAAA,CAAQvG,QAAR,CAAL,EAAwB;AACtBqM,4BAAM,CAACC,MAAP,CAActM,QAAQ,CAAC,CAAD,CAAtB,EAA2B;AAACuM,gCAAQ,EAAE;AAAX,uBAA3B;AACA,2BAAKP,KAAL,GAAahM,QAAb;AACA,2BAAKwM,UAAL,CAAgBxM,QAAQ,CAAC,CAAD,CAAR,CAAY5E,MAA5B;AACD;;;;;;;;;AACF;;;mCAEUqR,U,EAAkB;AAAA;;AAC3B,eAAKpO,SAAL,CAAeqO,KAAf;AACA,eAAKX,YAAL,CAAkBhB,IAAlB,CAAuB0B,UAAvB,EAAmC,KAAKpO,SAAxC,EAAmDtD,IAAnD,CAAwD,UAAA4R,CAAC,EAAI;AAC3D,mBAAI,CAACJ,QAAL,GAAgB,OAAI,CAACP,KAAL,CAAWY,IAAX,CAAgB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACN,QAAN;AAAA,aAAjB,CAAhB;AACD,WAFD;AAGD;;;iCAEeO,E,EAAqB;AACnC,eAAKN,UAAL,CAAgBM,EAAE,CAACvJ,IAAH,CAAQnI,MAAxB;AACD;;;;;;AAxCH;;;uBAMa0Q,c,EAAc,4C,EAAA,mC;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA;AAAA;0CACY,OAAAiB,gB;;;;;;;;;;;;;;;;ACpBvC;AACE;AAAA;AAAkD;AAAA;;AAAA;;AAAA,mBAAS,YAAT;AAAwB,WAAxB;AAA0B;AAC5E;AAAA;AAAuB;AAA8B;AACvD;AAAA;AACA;AAAA;AACE;AAAA;AAAsF;AAAA,mBAAU,IAAAC,QAAA,QAAV;AAA0B,WAA1B;AAA4B;AAClH;AAAA;AACE;AAAA;AACA;AAAA;AACF;AAAA;AACF;AAAA;AACA;;;;AAVsB;AAAA;AACG;AAAA;AAGD;AAAA,4CAAe,MAAf,EAAe,MAAf,EAAe,MAAf,EAAe,IAAf,EAAe,UAAf,EAAe,IAAf;;;;;;;;;2BDcXlB,c,EAAc;cAN1B,OAAAvE,SAM0B;eANhB;AACTC,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD,CAHF;AAITc,uBAAa,EAAE,OAAAC,iBAAA,CAAkBC;AAJxB,S;AAMgB,Q;;;;;;;;gBACxB,OAAAuE,S;iBAAU,iB,EAAmB;AAACC,gBAAI,EAAE,OAAAH,gBAAP;AAAyB,sBAAQ;AAAjC,W;;;;;;;;;;;;;;;;;;;;;;;;AEpBhC;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;;;;;AAEA,QAAMxR,GAAG,GAAG,IAAI,QAAAC,MAAJ,CAAW,aAAX,CAAZ;;QAca2P,W,GACX,uBAAc;AAAA;;AACZ5P,SAAG,CAACkB,KAAJ,CAAU,aAAV;AACD,K;;AAfH;;YAYa0O;;;;yBAAAA,W;AAAW,O;AAAA,gBAXb,CACP,SAAA1N,YADO,EAEP,SAAAE,YAFO,EAIP,uBAAAgK,YAJO,EAKP,wBAAAwF,aALO,EAMP,uBAAAC,YANO,EAOP,uBAAAC,YAPO,CAWa;;;;+EAAXlC,W,EAAW;AAAA,uBAFP,kBAAAW,cAEO;AAFO,kBAR3B,SAAArO,YAQ2B,EAP3B,SAAAE,YAO2B,EAL3B,uBAAAgK,YAK2B,EAJ3B,wBAAAwF,aAI2B,EAH3B,uBAAAC,YAG2B,EAF3B,uBAAAC,YAE2B;AAEP,O;AAJR,K;;;2BAIHlC,W,EAAW;cAZvB,OAAAvN,QAYuB;eAZd;AACRC,iBAAO,EAAE,CACP,SAAAJ,YADO,EAEP,SAAAE,YAFO,EAIP,uBAAAgK,YAJO,EAKP,wBAAAwF,aALO,EAMP,uBAAAC,YANO,EAOP,uBAAAC,YAPO,CADD;AAURzF,sBAAY,EAAE,CAAC,kBAAAkE,cAAD;AAVN,S;AAYc,Q;;;;;;;;;;;;;;;;;;;;;;;;ACtBxB;AAAA;AAAA;;QAEaR,K;;;;;;;oCACQlB,M,EAAc;AAC/B,iBAAO;AACLxO,gBAAI,EAAE,EADD;AAEL4P,qBAAS,EAAE,kBAAAM,cAFN;AAGLwB,oBAAQ,EAAElD,MAHL;AAIL7I,gBAAI,EAAE;AAAEC,mBAAK,EAAE;AAAT;AAJD,WAAP;AAMD;;;;;;AARH;;;;;;;;;;;;;;;;;;;ACJa,YAAA+L,GAAA,GAAyC;AACpD,6BAAuB;AAD6B,KAAzC;;;;;;;;;;;;;;;;;;;;ACKb;AAAA;AAAA;;AAEa,YAAAxQ,WAAA,GAAc;AACzBkD,gBAAU,EAAE,KADa;AAEzBjD,eAAS,EAAE,uBAFc;AAGzBwQ,aAAO,EAAE,OAAAD,GAAA,CAAIE,mBAAJ,GAA0B;AAHV,KAAd;;;;;;;;;;;;;;;;;;;;ACPb;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAEA,QAAI,cAAA1Q,WAAA,CAAYkD,UAAhB,EAA4B;AAC1B,aAAAyN,cAAA;AACD;;AAED,QAAMC,QAAQ,GAAG,2BAAAC,sBAAA,EAAjB;AACAD,YAAQ,CAACE,eAAT,CAAyB,aAAAjD,SAAzB,WAA0C,UAAAkD,GAAG;AAAA,aAAIzN,OAAO,CAACP,KAAR,CAAcgO,GAAd,CAAJ;AAAA,KAA7C","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Compiler, Inject, Injectable, InjectionToken, Injector, NgModule, NgModuleFactory, Optional, SkipSelf, Type, ViewContainerRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {RouteReuseStrategy, RouterModule} from '@angular/router';\n\nimport {RouteReusableStrategy} from './route-reusable-strategy';\nimport {ApiPrefixInterceptor} from './http/api-prefix.interceptor';\nimport {ErrorHandlerInterceptor} from './http/error-handler.interceptor';\nimport {Logger} from \"./logger.service\";\nimport {CoreService} from \"./services/core.service\";\nimport {API_BASE_URL, ApiService} from \"./services/api.service\";\nimport {environment} from \"../../environments/environment\";\n\nconst log = new Logger('CoreModule');\n\nexport const LAZY_WIDGETS = new InjectionToken<{ [key: string]: string }>('LAZY_WIDGETS');\n\nexport const lazyWidgets: { path: string, loadChildren: () => Promise<NgModuleFactory<any> | Type<any>> }[] = [\n  {\n    path: 'avatar',\n    loadChildren: () => import('../@modules/avatar/avatar.module').then(m => m.AvatarModule)\n  }, {\n    path: 'card',\n    loadChildren: () => import('../@modules/card/card.module').then(m => m.CardModule)\n  }, {\n    path: 'panel-bar',\n    loadChildren: () => import('../@modules/panel-bar/panel-bar.module').then(m => m.PanelBarModule)\n  }, {\n    path: 'splitter',\n    loadChildren: () => import('../@modules/splitter/splitter.module').then(m => m.SplitterModule)\n  }, {\n    path: 'stepper',\n    loadChildren: () => import('../@modules/stepper/stepper.module').then(m => m.StepperModule)\n  }\n];\n\nexport function lazyArrayToObj() {\n  const result = {};\n  for (const w of lazyWidgets) {\n    result[w.path] = w.loadChildren;\n  }\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [\n    CoreService,\n    ApiService,\n    {provide: API_BASE_URL, useValue: environment.serverUrl},\n    {provide: LAZY_WIDGETS, useFactory: lazyArrayToObj},\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    log.debug('constructor');\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleLoaderService {\n  constructor(private injector: Injector, private compiler: Compiler, @Inject(LAZY_WIDGETS) private lazyWidgets: { [key: string]: () => Promise<NgModuleFactory<any> | Type<any>> }) {\n  }\n\n  async load(name: string, container: ViewContainerRef) {\n    const tempModule = await this.lazyWidgets[name]();\n\n    let moduleFactory;\n    if (tempModule instanceof NgModuleFactory) {\n      // For AOT\n      moduleFactory = tempModule;\n    } else {\n      // For JIT\n      moduleFactory = await this.compiler.compileModuleAsync(tempModule);\n    }\n\n    const entryComponent = (moduleFactory.moduleType as any).entry;\n    const moduleRef = moduleFactory.create(this.injector);\n\n    const compFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(entryComponent);\n\n    container.createComponent(compFactory);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../../environments/environment\";\n\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Logger } from '../logger.service';\nimport {environment} from \"../../../environments/environment\";\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError((error) => ErrorHandlerInterceptor.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private static errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n}\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from './until-destroyed';\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n}\n","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\nexport interface IApiService {\n    getAllMenu(): Observable<MenuEntity[]>;\n    /**\n     * @return Menu create response\n     */\n    createMenu(body: MenuEntity): Observable<MenuEntity>;\n    /**\n     * @return Menu update response\n     */\n    updateMenu(body: MenuEntity): Observable<boolean>;\n    seedMenu(): Observable<MenuEntity[]>;\n    /**\n     * @return Menu multiple create response\n     */\n    createManyMenu(body: MenuEntity[]): Observable<MenuEntity[]>;\n    /**\n     * @return Menu delete response\n     */\n    deleteMenu(id: number): Observable<boolean>;\n    /**\n     * @return Menu id param query response\n     */\n    getMenuById(id: number): Observable<MenuEntity[]>;\n    getContacts(): Observable<ContactEntity[]>;\n    getContactById(id: number): Observable<ContactEntity>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService implements IApiService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    getAllMenu(): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetAllMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu create response\n     */\n    createMenu(body: MenuEntity): Observable<MenuEntity> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreateMenu(response: HttpResponseBase): Observable<MenuEntity> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result201 = MenuEntity.fromJS(resultData201);\n            return _observableOf(result201);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity>(<any>null);\n    }\n\n    /**\n     * @return Menu update response\n     */\n    updateMenu(body: MenuEntity): Observable<boolean> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<boolean>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<boolean>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processUpdateMenu(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(<any>null);\n    }\n\n    seedMenu(): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/seed\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processSeedMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSeedMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processSeedMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu multiple create response\n     */\n    createManyMenu(body: MenuEntity[]): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/many\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateManyMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateManyMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreateManyMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData201)) {\n                result201 = [] as any;\n                for (let item of resultData201)\n                    result201!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result201);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu delete response\n     */\n    deleteMenu(id: number): Observable<boolean> {\n        let url_ = this.baseUrl + \"/v1/menu/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<boolean>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<boolean>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDeleteMenu(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(<any>null);\n    }\n\n    /**\n     * @return Menu id param query response\n     */\n    getMenuById(id: number): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetMenuById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetMenuById(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetMenuById(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    getContacts(): Observable<ContactEntity[]> {\n        let url_ = this.baseUrl + \"/v1/contacts\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetContacts(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetContacts(<any>response_);\n                } catch (e) {\n                    return <Observable<ContactEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ContactEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetContacts(response: HttpResponseBase): Observable<ContactEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(ContactEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ContactEntity[]>(<any>null);\n    }\n\n    getContactById(id: number): Observable<ContactEntity> {\n        let url_ = this.baseUrl + \"/v1/contacts/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetContactById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetContactById(<any>response_);\n                } catch (e) {\n                    return <Observable<ContactEntity>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ContactEntity>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetContactById(response: HttpResponseBase): Observable<ContactEntity> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = ContactEntity.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ContactEntity>(<any>null);\n    }\n}\n\nexport class MenuEntity implements IMenuEntity {\n    id!: number;\n    title!: string;\n    module!: string;\n    icon!: string;\n\n    constructor(data?: IMenuEntity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.title = _data[\"title\"];\n            this.module = _data[\"module\"];\n            this.icon = _data[\"icon\"];\n        }\n    }\n\n    static fromJS(data: any): MenuEntity {\n        data = typeof data === 'object' ? data : {};\n        let result = new MenuEntity();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"title\"] = this.title;\n        data[\"module\"] = this.module;\n        data[\"icon\"] = this.icon;\n        return data; \n    }\n}\n\nexport interface IMenuEntity {\n    id: number;\n    title: string;\n    module: string;\n    icon: string;\n}\n\nexport class ContactEntity implements IContactEntity {\n    id!: number;\n    createdAt!: string;\n    name!: string;\n    avatar!: string;\n    position!: string;\n\n    constructor(data?: IContactEntity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.createdAt = _data[\"createdAt\"];\n            this.name = _data[\"name\"];\n            this.avatar = _data[\"avatar\"];\n            this.position = _data[\"position\"];\n        }\n    }\n\n    static fromJS(data: any): ContactEntity {\n        data = typeof data === 'object' ? data : {};\n        let result = new ContactEntity();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"createdAt\"] = this.createdAt;\n        data[\"name\"] = this.name;\n        data[\"avatar\"] = this.avatar;\n        data[\"position\"] = this.position;\n        return data; \n    }\n}\n\nexport interface IContactEntity {\n    id: number;\n    createdAt: string;\n    name: string;\n    avatar: string;\n    position: string;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number;\n    response: string;\n    headers: { [key: string]: any; };\n    result: any;\n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader();\n            reader.onload = event => {\n                observer.next((<any>event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob);\n        }\n    });\n}","import {Injectable} from '@angular/core';\nimport {isEmpty} from 'ramda';\n\nimport {Logger} from \"../logger.service\";\nimport {ApiService, MenuEntity} from \"./api.service\";\n\nconst log = new Logger('ConfigService');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  constructor(private apiService: ApiService) {\n    log.debug('[constructor]')\n  }\n\n  public async load(): Promise<boolean> {\n    log.debug('[load]');\n    const menus = await this.apiService.getAllMenu().toPromise();\n\n    if (isEmpty(menus)) {\n      await this.apiService.createManyMenu(<MenuEntity[]>[\n        {title: 'Avatar', icon: 'k-i-user', module: 'avatar'},\n        {title: 'Card', icon: 'k-i-image', module: 'card'},\n        {title: 'PanelBar', icon: 'k-i-menu', module: 'panel-bar'},\n        {title: 'Splitter', icon: 'k-i-arrows-resizing', module: 'splitter'},\n        {title: 'Stepper', icon: 'k-i-list-numbered', module: 'stepper'},\n      ]).toPromise();\n    }\n    return Promise.resolve(true);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  constructor() {\n  }\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\n\n/**\n * RxJS operator that unsubscribe from observables on destory.\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\n *\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\n * operator chain.\n *\n * @param instance The parent Angular component or object instance.\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\n * @example\n * ```\n * import { untilDestroyed } from '@core';\n *\n * @Component({\n * selector: 'app-example',\n *   templateUrl: './example.component.html'\n * })\n * export class ExampleComponent implements OnInit, OnDestroy {\n *   ngOnInit() {\n *     interval(1000)\n *       .pipe(untilDestroyed(this))\n *       .subscribe(val => console.log(val));\n *   }\n *\n *   // This method must be present, even if empty.\n *   ngOnDestroy() {\n *     // To protect you, an error will be thrown if it doesn't exist.\n *   }\n * }\n * ```\n */\nexport function untilDestroyed(instance: object, destroyMethodName: string = 'ngOnDestroy') {\n  return <T>(source: Observable<T>) => {\n    const originalDestroy = instance[destroyMethodName];\n    const hasDestroyFunction = typeof originalDestroy === 'function';\n\n    if (!hasDestroyFunction) {\n      throw new Error(\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n      );\n    }\n\n    if (!instance[untilDestroyedSymbol]) {\n      instance[untilDestroyedSymbol] = new Subject();\n\n      instance[destroyMethodName] = function () {\n        if (hasDestroyFunction) {\n          originalDestroy.apply(this, arguments);\n        }\n        instance[untilDestroyedSymbol].next();\n        instance[untilDestroyedSymbol].complete();\n      };\n    }\n\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\n  };\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService, ContactEntity} from \"../../@core/services/api.service\";\nimport {isEmpty} from \"ramda\";\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss']\n})\nexport class AvatarComponent implements OnInit {\n  contacts!: ContactEntity[];\n\n  constructor(private apiService: ApiService) {\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getContacts().toPromise();\n    if (!isEmpty(response)){\n      this.contacts = response;\n    }\n  }\n\n}\n","<div class=\"list\" *ngIf=\"contacts\">\n  <div class=\"contact-list\">Contacts</div>\n  <div class=\"contact\" *ngFor=\"let contact of contacts\">\n    <div class=\"k-hbox\">\n      <kendo-avatar [shape]=\"'circle'\" [imageSrc]=\"contact.avatar\"></kendo-avatar>\n      <div>\n        <h2>{{ contact.name }}</h2>\n        <p>{{ contact.position }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AvatarComponent} from './avatar.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule,\n  ],\n  declarations: [AvatarComponent]\n})\nexport class AvatarModule {\n  static entry = AvatarComponent;\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from './interface/scrollViewCard';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardsComponent {\n  public scrollViewCards: Array<ScrollViewCard> = [\n    {\n      \"thumbnailSrc\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/bg_flag.jpg\",\n      \"headerTitle\": \"bg_traditions\",\n      \"headerSubtitle\": \"Bulgaria, Europe\",\n      \"commentsExpanded\": false,\n      \"postLiked\": false,\n      \"comments\": [],\n      \"postLikes\": 674,\n      \"newCommentTextValue\": \"\",\n      \"scrollViewItems\": [\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/kukeri.jpg\"},\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/martenitsa.jpg\"},\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rose_festival.jpg\"}\n      ]\n    },\n    {\n      thumbnailSrc: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rila_lakes.jpg',\n      headerTitle: 'bg_mountains',\n      headerSubtitle: 'Bulgaria, Europe',\n      commentsExpanded: false,\n      postLiked: false,\n      comments: [],\n      newCommentTextValue: '',\n      postLikes: 962,\n      scrollViewItems: [\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rila.jpg'},\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/pamporovo.jpg'},\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/camping.jpg'}\n      ]\n    }\n  ];\n\n  constructor() {\n  }\n}\n","<div class=\"card-list\">\n  <div *ngFor=\"let card of scrollViewCards\">\n    <scrollview-card [card]=\"card\"></scrollview-card>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardsComponent} from './card.component';\nimport {ScrollViewCardComponent} from './scroll-view-card/scroll-view-card.component';\nimport {CommentActionsComponent} from './comment-actions/comment-actions.component';\nimport {PostCommentComponent} from './post-comment/post-comment.component';\nimport {ScrollViewModule} from '@progress/kendo-angular-scrollview';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollViewModule,\n    LayoutModule,\n    FormsModule,\n  ],\n  declarations: [\n    CardsComponent,\n    ScrollViewCardComponent,\n    CommentActionsComponent,\n    PostCommentComponent\n  ]\n})\nexport class CardModule {\n  static entry = CardsComponent;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\n\n@Component({\n  selector: 'comment-actions',\n  templateUrl: './comment-actions.component.html',\n  styleUrls: ['./comment-actions.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CommentActionsComponent {\n  @Input() public card: ScrollViewCard;\n\n  constructor() {\n  }\n\n  public commentClick(card: ScrollViewCard): void {\n    card.commentsExpanded = !card.commentsExpanded;\n  }\n\n  public postLikesCount(card: ScrollViewCard): void {\n    if (card.postLiked) {\n      card.postLikes -= 1;\n    } else {\n      card.postLikes += 1;\n    }\n\n    card.postLiked = !card.postLiked;\n  }\n\n  public postHeartIcon(card: ScrollViewCard): string {\n    return card.postLiked ? 'k-icon k-i-heart' : 'k-icon k-i-heart-outline';\n  }\n}\n","<div>\n  <button class=\"k-button k-flat\" (click)=\"postLikesCount(card)\">\n    <span [ngClass]=\"postHeartIcon(card)\"></span>\n  </button>\n  <button class=\"k-button k-flat\" (click)=\"commentClick(card)\">\n    <span class=\"k-icon k-i-comment\"></span>\n  </button>\n  <button class=\"k-button k-flat\"><span class=\"k-icon k-i-share\"></span></button>\n</div>\n<span class=\"post-likes-count\">{{ card.postLikes }} likes</span>\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\nimport {Comment} from \"../interface/comment\";\n\n@Component({\n  selector: 'post-comment',\n  templateUrl: './post-comment.component.html',\n  styleUrls: ['./post-comment.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PostCommentComponent {\n  @Input() public card: ScrollViewCard;\n\n  public commentLikesCount(comment: any): void {\n    if (comment.likes > 0) {\n      comment.likes -= 1;\n    } else {\n      comment.likes += 1;\n    }\n  }\n\n  public commentHeartIcon(comment: Comment): string {\n    if (comment && comment.likes > 0) {\n      return 'k-icon k-i-heart';\n    } else {\n      return 'k-icon k-i-heart-outline';\n    }\n  }\n\n  public postComment(card: ScrollViewCard): void {\n    if (card.newCommentTextValue) {\n      const comment = {text: card.newCommentTextValue, likes: 0};\n      card.comments.push(comment);\n      card.newCommentTextValue = '';\n    }\n  }\n}\n","<div *ngIf=\"card.comments.length\">\n  <div class=\"card-comment-wrapper\">\n    <div class=\"box\" *ngFor=\"let comment of card.comments\">\n      <div class=\"card-comment-container\">\n        <kendo-avatar\n          class=\"card-comment-thumbnail\"\n          [initials]=\"'EG'\"\n          [shape]=\"'circle'\"\n          [cssStyle]=\"{ color: 'white' }\"\n        >\n        </kendo-avatar>\n        <div class=\"comment-box\">\n          <span class=\"comment-text\">{{ comment.text }}</span>\n          <span class=\"time\">1s ago<span>{{ comment.likes }} like</span></span>\n        </div>\n      </div>\n      <button class=\"k-button k-flat\" (click)=\"commentLikesCount(comment)\">\n        <span [ngClass]=\"commentHeartIcon(comment)\"></span>\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"k-hbox card-post-comment-wrapper\">\n  <textarea class=\"k-textarea\" placeholder=\"Comment...\" [(ngModel)]=\"card.newCommentTextValue\"></textarea>\n  <button class=\"k-button k-primary k-flat\" (click)=\"postComment(card)\">Post</button>\n</div>\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\n\n@Component({\n  selector: 'scrollview-card',\n  templateUrl: './scroll-view-card.component.html',\n  styleUrls: ['./scroll-view-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ScrollViewCardComponent {\n  @Input() public card: ScrollViewCard;\n\n}\n","<kendo-card [width]=\"'260px'\">\n  <kendo-card-header class=\"k-hbox\">\n    <kendo-avatar width=\"40px\" height=\"40px\" [imageSrc]=\"card.thumbnailSrc\" [shape]=\"'circle'\"></kendo-avatar>\n    <div>\n      <h1 kendoCardTitle>{{ card.headerTitle }}</h1>\n      <p kendoCardSubtitle>{{ card.headerSubtitle }}</p>\n    </div>\n  </kendo-card-header>\n\n  <kendo-scrollview\n    *ngIf=\"card.scrollViewItems\"\n    kendoCardMedia\n    [data]=\"card.scrollViewItems\"\n    [width]=\"'100%'\"\n    [height]=\"'185px'\"\n    [arrows]=\"true\"\n    [pageable]=\"true\">\n    <ng-template let-item=\"item\">\n      <img src='{{ item.url }}' alt='{{ item.title }}' [ngStyle]=\"{ minWidth: '100%' }\" draggable=\"false\" />\n    </ng-template>\n  </kendo-scrollview>\n\n  <kendo-card-actions>\n    <comment-actions [card]=\"card\"></comment-actions>\n  </kendo-card-actions>\n\n  <hr kendoCardSeparator *ngIf=\"card.comments.length && card.commentsExpanded\">\n  <kendo-card-body *ngIf=\"card.commentsExpanded\">\n    <post-comment [card]=\"card\"></post-comment>\n  </kendo-card-body>\n</kendo-card>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-panel-bar',\n  templateUrl: './panel-bar.component.html',\n  styleUrls: ['./panel-bar.component.scss']\n})\nexport class PanelBarComponent {\n\n  baseImageUrl = 'https://demos.telerik.com/kendo-ui/content/web/panelbar/';\n\n  public imageUrl(imageName: string) {\n    return this.baseImageUrl + imageName + '.jpg';\n  }\n}\n","<div class=\"panelbar-wrapper\">\n  <kendo-panelbar>\n    <kendo-panelbar-item [title]=\"'My Teammates'\" expanded=\"true\">\n      <ng-template kendoPanelBarContent>\n        <div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('andrew')\" alt=\"Andrew Fuller\"/>\n            <span class=\"mate-info\">\n                                    <h2>Andrew Fuller</h2>\n                                    <p>Team Lead</p>\n                                </span>\n          </div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('nancy')\" alt=\"Nancy Leverling\"/>\n            <span class=\"mate-info\">\n                                    <h2>Nancy Leverling</h2>\n                                    <p>Sales Associate</p>\n                                </span>\n          </div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('robert')\" alt=\"Robert King\"/>\n            <span class=\"mate-info\">\n                                    <h2>Robert King</h2>\n                                    <p>Business System Analyst</p>\n                                </span>\n          </div>\n        </div>\n      </ng-template>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Projects'\">\n      <kendo-panelbar-item [title]=\"'New Business Plan'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Sales Forecasts'\">\n        <kendo-panelbar-item [title]=\"'Q1 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q2 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q3 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q4 Forecast'\"></kendo-panelbar-item>\n      </kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Sales Reports'\"></kendo-panelbar-item>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Programs'\">\n      <kendo-panelbar-item [title]=\"'Monday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Tuesday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Wednesday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Thursday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Friday'\"></kendo-panelbar-item>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Communication'\" [disabled]=\"true\"></kendo-panelbar-item>\n  </kendo-panelbar>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PanelBarComponent} from './panel-bar.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [PanelBarComponent]\n})\nexport class PanelBarModule {\n  static entry = PanelBarComponent;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splitter',\n  templateUrl: './splitter.component.html',\n  styleUrls: ['./splitter.component.scss']\n})\nexport class SplitterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<kendo-splitter orientation=\"vertical\" style=\"height: 340px;\">\n  <kendo-splitter-pane>\n    <kendo-splitter>\n      <kendo-splitter-pane [collapsible]=\"true\" size=\"30%\">\n        <div class=\"pane-content\">\n          <h3>Inner splitter / left pane</h3>\n          <p>Resizable and collapsible.</p>\n        </div>\n      </kendo-splitter-pane>\n      <kendo-splitter-pane>\n        <div class=\"pane-content\">\n          <h3>Inner splitter / center pane</h3>\n          <p>Resizable only.</p>\n        </div>\n      </kendo-splitter-pane>\n      <kendo-splitter-pane [collapsible]=\"true\" size=\"30%\">\n        <div class=\"pane-content\">\n          <h3>Inner splitter / right pane</h3>\n          <p>Resizable and collapsible.</p>\n        </div>\n      </kendo-splitter-pane>\n    </kendo-splitter>\n  </kendo-splitter-pane>\n  <kendo-splitter-pane size=\"100px\">\n    <div class=\"pane-content\">\n      <h3>Outer splitter / Middle pane</h3>\n      <p>Resizable only.</p>\n    </div>\n  </kendo-splitter-pane>\n  <kendo-splitter-pane [resizable]=\"false\" size=\"100px\">\n    <div class=\"pane-content\">\n      <h3>Outer splitter / Bottom pane</h3>\n      <p>Non-resizable and non-collapsible.</p>\n    </div>\n  </kendo-splitter-pane>\n</kendo-splitter>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SplitterComponent} from './splitter.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [SplitterComponent]\n})\nexport class SplitterModule {\n  static entry = SplitterComponent;\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss']\n})\nexport class StepperComponent {\n\n  public current = 1;\n\n  public steps = [\n    {label: 'Personal Info', icon: 'user'},\n    {label: 'Education', icon: 'dictionary-add'},\n    {label: 'Attachments', icon: 'attachment', optional: true},\n    {label: 'Preview', icon: 'preview'},\n    {label: 'Submit', icon: 'file-add'}\n  ];\n\n}\n","\n<kendo-stepper\n  [steps]=\"steps\"\n  [stepType]=\"'full'\"\n  [(currentStep)]=\"current\"\n  [linear]=\"false\"\n  [style.width.px]=\"570\">\n</kendo-stepper>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StepperComponent} from './stepper.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [StepperComponent]\n})\nexport class StepperModule {\n  static entry = StepperComponent;\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {LoaderComponent} from './loader/loader.component';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('SharedModule');\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class SharedModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  // Shell.childRoutes([{ path: 'about', loadChildren: () => import('./about/about.module').then((m) => m.AboutModule) }]),\n  // Fallback when no prior route is matched\n  {path: '**', redirectTo: '/home', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})\n  ],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\nimport {Logger} from \"./@core\";\n\nconst log = new Logger('AppComponent');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'client';\n\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","<router-outlet></router-outlet>\n","import {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport \"reflect-metadata\";\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HomeModule} from \"./home/home.module\";\nimport {CoreModule} from \"./@core\";\nimport {SharedModule} from \"./@shared\";\nimport {ShellModule} from \"./shell/shell.module\";\nimport {ConfigService} from \"./@core/services/config.service\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    /*Local Modules*/\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (config: ConfigService) => async () => await config.load(),\n      deps: [ConfigService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport {Shell} from \"../shell/shell.service\";\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: 'Home' } },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class HomeRoutingModule {}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('HomeComponent');\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {HomeRoutingModule} from './home-routing.module';\nimport {HomeComponent} from './home.component';\nimport {CoreModule, Logger} from \"../@core\";\nimport {SharedModule} from \"../@shared\";\n\nconst log = new Logger('HomeModule');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    HomeRoutingModule\n  ],\n  declarations: [HomeComponent],\n})\nexport class HomeModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {MenuEntity} from \"../@core/services/api.service\";\nimport {Expose} from \"class-transformer\";\n\nexport class MenuItem implements MenuEntity {\n  @Expose()\n  icon: string;\n\n  @Expose()\n  id: number;\n\n  @Expose()\n  module: string;\n\n  @Expose()\n  title: string;\n\n  @Expose()\n  selected: boolean;\n\n  @Expose()\n  get text(): string {\n    return this.title;\n  }\n\n  init(_data?: any): void {\n  }\n\n  toJSON(data?: any): any {\n  }\n}\n","import {Component, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation,} from '@angular/core';\nimport {DrawerSelectEvent} from \"@progress/kendo-angular-layout\";\nimport {map} from \"rxjs/operators\";\nimport {plainToClass} from \"class-transformer\";\nimport {isEmpty} from \"ramda\";\n\nimport {Logger, ModuleLoaderService} from \"../@core\";\nimport {environment} from \"../../environments/environment\";\nimport {MenuItem} from \"./menu-item\";\nimport {ApiService} from \"../@core/services/api.service\";\n\nconst log = new Logger('ShellComponent');\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ShellComponent implements OnInit {\n  @ViewChild('moduleContainer', {read: ViewContainerRef, static: true})\n  container: ViewContainerRef;\n\n  public selected: MenuItem;\n  public items: Array<MenuItem> = [];\n\n  constructor(private moduleLoader: ModuleLoaderService, private apiService: ApiService) {\n    log.debug('constructor');\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n    const response = await this.apiService.getAllMenu().pipe(map(value => plainToClass(MenuItem, value))).toPromise();\n    if (!isEmpty(response)) {\n      Object.assign(response[0], {selected: true});\n      this.items = response;\n      this.loadModule(response[0].module);\n    }\n  }\n\n  loadModule(moduleName: string): void {\n    this.container.clear();\n    this.moduleLoader.load(moduleName, this.container).then(r => {\n      this.selected = this.items.find(i => i.selected);\n    });\n  }\n\n  public onSelect(ev: DrawerSelectEvent): void {\n    this.loadModule(ev.item.module);\n  }\n}\n","<div class=\"custom-toolbar\">\n  <button kendoButton [icon]=\"'layout'\" look=\"flat\" (click)=\"drawer.toggle()\"></button>\n  <span class=\"mail-box\">Application {{selected?.text}}</span>\n</div>\n<kendo-drawer-container>\n  <kendo-drawer #drawer [items]=\"items\" [mode]=\"'push'\" [mini]=\"true\" [expanded]=\"true\" (select)=\"onSelect($event)\"></kendo-drawer>\n  <kendo-drawer-content>\n    <router-outlet></router-outlet>\n    <div #moduleContainer></div>\n  </kendo-drawer-content>\n</kendo-drawer-container>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {DrawerModule, LayoutModule} from \"@progress/kendo-angular-layout\";\nimport {ButtonsModule} from \"@progress/kendo-angular-buttons\";\nimport {InputsModule} from \"@progress/kendo-angular-inputs\";\n\nimport {ShellComponent} from './shell.component';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('ShellModule');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    /*Progress-Telerik*/\n    LayoutModule,\n    ButtonsModule,\n    DrawerModule,\n    InputsModule\n  ],\n  declarations: [ShellComponent],\n})\nexport class ShellModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import { Routes, Route } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\nexport class Shell {\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      data: { reuse: true },\n    };\n  }\n}\n","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '0.0.1'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nimport {env} from './.env';\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  version: env.npm_package_version + '-dev'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule).catch(err => console.error(err));\n"]}