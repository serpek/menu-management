{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./apps/client/src/app/@core/core.module.ts","./apps/client/src/app/@core/http/api-prefix.interceptor.ts","./apps/client/src/app/@core/http/error-handler.interceptor.ts","./apps/client/src/app/@core/index.ts","./apps/client/src/app/@core/logger.service.ts","./apps/client/src/app/@core/route-reusable-strategy.ts","./apps/client/src/app/@core/services/api.service.ts","./apps/client/src/app/@core/services/config.service.ts","./apps/client/src/app/@core/services/core.service.ts","./apps/client/src/app/@core/until-destroyed.ts","./apps/client/src/app/@modules/avatar/avatar.component.ts","./apps/client/src/app/@modules/avatar/avatar.component.html","./apps/client/src/app/@modules/avatar/avatar.module.ts","./apps/client/src/app/@modules/card/card.component.ts","./apps/client/src/app/@modules/card/card.component.html","./apps/client/src/app/@modules/card/card.module.ts","./apps/client/src/app/@modules/card/comment-actions/comment-actions.component.ts","./apps/client/src/app/@modules/card/comment-actions/comment-actions.component.html","./apps/client/src/app/@modules/card/post-comment/post-comment.component.ts","./apps/client/src/app/@modules/card/post-comment/post-comment.component.html","./apps/client/src/app/@modules/card/scroll-view-card/scroll-view-card.component.ts","./apps/client/src/app/@modules/card/scroll-view-card/scroll-view-card.component.html","./apps/client/src/app/@modules/panel-bar/panel-bar.component.ts","./apps/client/src/app/@modules/panel-bar/panel-bar.component.html","./apps/client/src/app/@modules/panel-bar/panel-bar.module.ts","./apps/client/src/app/@modules/splitter/splitter.component.ts","./apps/client/src/app/@modules/splitter/splitter.component.html","./apps/client/src/app/@modules/splitter/splitter.module.ts","./apps/client/src/app/@modules/stepper/stepper.component.ts","./apps/client/src/app/@modules/stepper/stepper.component.html","./apps/client/src/app/@modules/stepper/stepper.module.ts","./apps/client/src/app/@shared/index.ts","./apps/client/src/app/@shared/loader/loader.component.ts","./apps/client/src/app/@shared/loader/loader.component.html","./apps/client/src/app/@shared/shared.module.ts","./apps/client/src/app/app-routing.module.ts","./apps/client/src/app/app.component.ts","./apps/client/src/app/app.component.html","./apps/client/src/app/app.module.ts","./apps/client/src/app/home/home-routing.module.ts","./apps/client/src/app/home/home.component.ts","./apps/client/src/app/home/home.module.ts","./apps/client/src/app/shell/menu-item.ts","./apps/client/src/app/shell/shell.component.ts","./apps/client/src/app/shell/shell.component.html","./apps/client/src/app/shell/shell.module.ts","./apps/client/src/app/shell/shell.service.ts","./apps/client/src/environments/.env.ts","./apps/client/src/environments/environment.ts","./apps/client/src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Compiler, Inject, Injectable, InjectionToken, Injector, NgModule, NgModuleFactory, Optional, SkipSelf, Type, ViewContainerRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {RouteReuseStrategy, RouterModule} from '@angular/router';\n\nimport {RouteReusableStrategy} from './route-reusable-strategy';\nimport {ApiPrefixInterceptor} from './http/api-prefix.interceptor';\nimport {ErrorHandlerInterceptor} from './http/error-handler.interceptor';\nimport {Logger} from \"./logger.service\";\nimport {CoreService} from \"./services/core.service\";\nimport {API_BASE_URL, ApiService} from \"./services/api.service\";\nimport {environment} from \"../../environments/environment\";\n\nconst log = new Logger('CoreModule');\n\nexport const LAZY_WIDGETS = new InjectionToken<{ [key: string]: string }>('LAZY_WIDGETS');\n\nexport const lazyWidgets: { path: string, loadChildren: () => Promise<NgModuleFactory<any> | Type<any>> }[] = [\n  {\n    path: 'avatar',\n    loadChildren: () => import('../@modules/avatar/avatar.module').then(m => m.AvatarModule)\n  }, {\n    path: 'card',\n    loadChildren: () => import('../@modules/card/card.module').then(m => m.CardModule)\n  }, {\n    path: 'panel-bar',\n    loadChildren: () => import('../@modules/panel-bar/panel-bar.module').then(m => m.PanelBarModule)\n  }, {\n    path: 'splitter',\n    loadChildren: () => import('../@modules/splitter/splitter.module').then(m => m.SplitterModule)\n  }, {\n    path: 'stepper',\n    loadChildren: () => import('../@modules/stepper/stepper.module').then(m => m.StepperModule)\n  }\n];\n\nexport function lazyArrayToObj() {\n  const result = {};\n  for (const w of lazyWidgets) {\n    result[w.path] = w.loadChildren;\n  }\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [\n    CoreService,\n    ApiService,\n    {provide: API_BASE_URL, useValue: environment.serverUrl},\n    {provide: LAZY_WIDGETS, useFactory: lazyArrayToObj},\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true,\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    log.debug('constructor');\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModuleLoaderService {\n  constructor(private injector: Injector, private compiler: Compiler, @Inject(LAZY_WIDGETS) private lazyWidgets: { [key: string]: () => Promise<NgModuleFactory<any> | Type<any>> }) {\n  }\n\n  async load(name: string, container: ViewContainerRef) {\n    const tempModule = await this.lazyWidgets[name]();\n\n    let moduleFactory;\n    if (tempModule instanceof NgModuleFactory) {\n      // For AOT\n      moduleFactory = tempModule;\n    } else {\n      // For JIT\n      moduleFactory = await this.compiler.compileModuleAsync(tempModule);\n    }\n\n    const entryComponent = (moduleFactory.moduleType as any).entry;\n    const moduleRef = moduleFactory.create(this.injector);\n\n    const compFactory = moduleRef.componentFactoryResolver.resolveComponentFactory(entryComponent);\n\n    container.createComponent(compFactory);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {environment} from \"../../../environments/environment\";\n\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Logger } from '../logger.service';\nimport {environment} from \"../../../environments/environment\";\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError((error) => ErrorHandlerInterceptor.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private static errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n}\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from './until-destroyed';\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n}\n","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.6.2.0 (NJsonSchema v10.1.23.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\nexport interface IApiService {\n    getAllMenu(): Observable<MenuEntity[]>;\n    /**\n     * @return Menu create response\n     */\n    createMenu(body: MenuEntity): Observable<MenuEntity>;\n    /**\n     * @return Menu update response\n     */\n    updateMenu(body: MenuEntity): Observable<boolean>;\n    seedMenu(): Observable<MenuEntity[]>;\n    /**\n     * @return Menu multiple create response\n     */\n    createManyMenu(body: MenuEntity[]): Observable<MenuEntity[]>;\n    /**\n     * @return Menu delete response\n     */\n    deleteMenu(id: number): Observable<boolean>;\n    /**\n     * @return Menu id param query response\n     */\n    getMenuById(id: number): Observable<MenuEntity[]>;\n    getContacts(): Observable<ContactEntity[]>;\n    getContactById(id: number): Observable<ContactEntity>;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService implements IApiService {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl ? baseUrl : \"\";\n    }\n\n    getAllMenu(): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetAllMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu create response\n     */\n    createMenu(body: MenuEntity): Observable<MenuEntity> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreateMenu(response: HttpResponseBase): Observable<MenuEntity> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result201 = MenuEntity.fromJS(resultData201);\n            return _observableOf(result201);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity>(<any>null);\n    }\n\n    /**\n     * @return Menu update response\n     */\n    updateMenu(body: MenuEntity): Observable<boolean> {\n        let url_ = this.baseUrl + \"/v1/menu\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<boolean>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<boolean>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processUpdateMenu(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(<any>null);\n    }\n\n    seedMenu(): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/seed\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processSeedMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processSeedMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processSeedMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu multiple create response\n     */\n    createManyMenu(body: MenuEntity[]): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/many\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateManyMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateManyMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processCreateManyMenu(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 201) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result201: any = null;\n            let resultData201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData201)) {\n                result201 = [] as any;\n                for (let item of resultData201)\n                    result201!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result201);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    /**\n     * @return Menu delete response\n     */\n    deleteMenu(id: number): Observable<boolean> {\n        let url_ = this.baseUrl + \"/v1/menu/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteMenu(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteMenu(<any>response_);\n                } catch (e) {\n                    return <Observable<boolean>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<boolean>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processDeleteMenu(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = resultData200 !== undefined ? resultData200 : <any>null;\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(<any>null);\n    }\n\n    /**\n     * @return Menu id param query response\n     */\n    getMenuById(id: number): Observable<MenuEntity[]> {\n        let url_ = this.baseUrl + \"/v1/menu/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetMenuById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetMenuById(<any>response_);\n                } catch (e) {\n                    return <Observable<MenuEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<MenuEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetMenuById(response: HttpResponseBase): Observable<MenuEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(MenuEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<MenuEntity[]>(<any>null);\n    }\n\n    getContacts(): Observable<ContactEntity[]> {\n        let url_ = this.baseUrl + \"/v1/contacts\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetContacts(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetContacts(<any>response_);\n                } catch (e) {\n                    return <Observable<ContactEntity[]>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ContactEntity[]>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetContacts(response: HttpResponseBase): Observable<ContactEntity[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200!.push(ContactEntity.fromJS(item));\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ContactEntity[]>(<any>null);\n    }\n\n    getContactById(id: number): Observable<ContactEntity> {\n        let url_ = this.baseUrl + \"/v1/contacts/{id}\";\n        if (id === undefined || id === null)\n            throw new Error(\"The parameter 'id' must be defined.\");\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"application/json\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetContactById(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetContactById(<any>response_);\n                } catch (e) {\n                    return <Observable<ContactEntity>><any>_observableThrow(e);\n                }\n            } else\n                return <Observable<ContactEntity>><any>_observableThrow(response_);\n        }));\n    }\n\n    protected processGetContactById(response: HttpResponseBase): Observable<ContactEntity> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = ContactEntity.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status === 400) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Bad request.\", status, _responseText, _headers);\n            }));\n        } else if (status === 403) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Forbidden.\", status, _responseText, _headers);\n            }));\n        } else if (status === 500) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"Server error.\", status, _responseText, _headers);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ContactEntity>(<any>null);\n    }\n}\n\nexport class MenuEntity implements IMenuEntity {\n    id!: number;\n    title!: string;\n    module!: string;\n    icon!: string;\n\n    constructor(data?: IMenuEntity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.title = _data[\"title\"];\n            this.module = _data[\"module\"];\n            this.icon = _data[\"icon\"];\n        }\n    }\n\n    static fromJS(data: any): MenuEntity {\n        data = typeof data === 'object' ? data : {};\n        let result = new MenuEntity();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"title\"] = this.title;\n        data[\"module\"] = this.module;\n        data[\"icon\"] = this.icon;\n        return data; \n    }\n}\n\nexport interface IMenuEntity {\n    id: number;\n    title: string;\n    module: string;\n    icon: string;\n}\n\nexport class ContactEntity implements IContactEntity {\n    id!: number;\n    createdAt!: string;\n    name!: string;\n    avatar!: string;\n    position!: string;\n\n    constructor(data?: IContactEntity) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.createdAt = _data[\"createdAt\"];\n            this.name = _data[\"name\"];\n            this.avatar = _data[\"avatar\"];\n            this.position = _data[\"position\"];\n        }\n    }\n\n    static fromJS(data: any): ContactEntity {\n        data = typeof data === 'object' ? data : {};\n        let result = new ContactEntity();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"createdAt\"] = this.createdAt;\n        data[\"name\"] = this.name;\n        data[\"avatar\"] = this.avatar;\n        data[\"position\"] = this.position;\n        return data; \n    }\n}\n\nexport interface IContactEntity {\n    id: number;\n    createdAt: string;\n    name: string;\n    avatar: string;\n    position: string;\n}\n\nexport class SwaggerException extends Error {\n    message: string;\n    status: number;\n    response: string;\n    headers: { [key: string]: any; };\n    result: any;\n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isSwaggerException = true;\n\n    static isSwaggerException(obj: any): obj is SwaggerException {\n        return obj.isSwaggerException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader();\n            reader.onload = event => {\n                observer.next((<any>event.target).result);\n                observer.complete();\n            };\n            reader.readAsText(blob);\n        }\n    });\n}","import {Injectable} from '@angular/core';\nimport {isEmpty} from 'ramda';\n\nimport {Logger} from \"../logger.service\";\nimport {ApiService, MenuEntity} from \"./api.service\";\n\nconst log = new Logger('ConfigService');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  constructor(private apiService: ApiService) {\n    log.debug('[constructor]')\n  }\n\n  public async load(): Promise<boolean> {\n    log.debug('[load]');\n    const menus = await this.apiService.getAllMenu().toPromise();\n\n    if (isEmpty(menus)) {\n      await this.apiService.createManyMenu(<MenuEntity[]>[\n        {title: 'Avatar', icon: 'k-i-user', module: 'avatar'},\n        {title: 'Card', icon: 'k-i-image', module: 'card'},\n        {title: 'PanelBar', icon: 'k-i-menu', module: 'panel-bar'},\n        {title: 'Splitter', icon: 'k-i-arrows-resizing', module: 'splitter'},\n        {title: 'Stepper', icon: 'k-i-list-numbered', module: 'stepper'},\n      ]).toPromise();\n    }\n    return Promise.resolve(true);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  constructor() {\n  }\n\n}\n","import { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\n\n/**\n * RxJS operator that unsubscribe from observables on destory.\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\n *\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\n * operator chain.\n *\n * @param instance The parent Angular component or object instance.\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\n * @example\n * ```\n * import { untilDestroyed } from '@core';\n *\n * @Component({\n * selector: 'app-example',\n *   templateUrl: './example.component.html'\n * })\n * export class ExampleComponent implements OnInit, OnDestroy {\n *   ngOnInit() {\n *     interval(1000)\n *       .pipe(untilDestroyed(this))\n *       .subscribe(val => console.log(val));\n *   }\n *\n *   // This method must be present, even if empty.\n *   ngOnDestroy() {\n *     // To protect you, an error will be thrown if it doesn't exist.\n *   }\n * }\n * ```\n */\nexport function untilDestroyed(instance: object, destroyMethodName: string = 'ngOnDestroy') {\n  return <T>(source: Observable<T>) => {\n    const originalDestroy = instance[destroyMethodName];\n    const hasDestroyFunction = typeof originalDestroy === 'function';\n\n    if (!hasDestroyFunction) {\n      throw new Error(\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\n      );\n    }\n\n    if (!instance[untilDestroyedSymbol]) {\n      instance[untilDestroyedSymbol] = new Subject();\n\n      instance[destroyMethodName] = function () {\n        if (hasDestroyFunction) {\n          originalDestroy.apply(this, arguments);\n        }\n        instance[untilDestroyedSymbol].next();\n        instance[untilDestroyedSymbol].complete();\n      };\n    }\n\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\n  };\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ApiService, ContactEntity} from \"../../@core/services/api.service\";\nimport {isEmpty} from \"ramda\";\n\n@Component({\n  selector: 'app-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss']\n})\nexport class AvatarComponent implements OnInit {\n  contacts!: ContactEntity[];\n\n  constructor(private apiService: ApiService) {\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getContacts().toPromise();\n    if (!isEmpty(response)){\n      this.contacts = response;\n    }\n  }\n\n}\n","<div class=\"list\" *ngIf=\"contacts\">\n  <div class=\"contact-list\">Contacts</div>\n  <div class=\"contact\" *ngFor=\"let contact of contacts\">\n    <div class=\"k-hbox\">\n      <kendo-avatar [shape]=\"'circle'\" [imageSrc]=\"contact.avatar\"></kendo-avatar>\n      <div>\n        <h2>{{ contact.name }}</h2>\n        <p>{{ contact.position }}</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AvatarComponent} from './avatar.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    LayoutModule,\n  ],\n  declarations: [AvatarComponent]\n})\nexport class AvatarModule {\n  static entry = AvatarComponent;\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from './interface/scrollViewCard';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardsComponent {\n  public scrollViewCards: Array<ScrollViewCard> = [\n    {\n      \"thumbnailSrc\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/bg_flag.jpg\",\n      \"headerTitle\": \"bg_traditions\",\n      \"headerSubtitle\": \"Bulgaria, Europe\",\n      \"commentsExpanded\": false,\n      \"postLiked\": false,\n      \"comments\": [],\n      \"postLikes\": 674,\n      \"newCommentTextValue\": \"\",\n      \"scrollViewItems\": [\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/kukeri.jpg\"},\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/martenitsa.jpg\"},\n        {\"url\": \"https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rose_festival.jpg\"}\n      ]\n    },\n    {\n      thumbnailSrc: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rila_lakes.jpg',\n      headerTitle: 'bg_mountains',\n      headerSubtitle: 'Bulgaria, Europe',\n      commentsExpanded: false,\n      postLiked: false,\n      comments: [],\n      newCommentTextValue: '',\n      postLikes: 962,\n      scrollViewItems: [\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/rila.jpg'},\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/pamporovo.jpg'},\n        {url: 'https://www.telerik.com/kendo-angular-ui-develop/components/layout/card/assets/camping.jpg'}\n      ]\n    }\n  ];\n\n  constructor() {\n  }\n}\n","<div class=\"card-list\">\n  <div *ngFor=\"let card of scrollViewCards\">\n    <scrollview-card [card]=\"card\"></scrollview-card>\n  </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CardsComponent} from './card.component';\nimport {ScrollViewCardComponent} from './scroll-view-card/scroll-view-card.component';\nimport {CommentActionsComponent} from './comment-actions/comment-actions.component';\nimport {PostCommentComponent} from './post-comment/post-comment.component';\nimport {ScrollViewModule} from '@progress/kendo-angular-scrollview';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ScrollViewModule,\n    LayoutModule,\n    FormsModule,\n  ],\n  declarations: [\n    CardsComponent,\n    ScrollViewCardComponent,\n    CommentActionsComponent,\n    PostCommentComponent\n  ]\n})\nexport class CardModule {\n  static entry = CardsComponent;\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\n\n@Component({\n  selector: 'comment-actions',\n  templateUrl: './comment-actions.component.html',\n  styleUrls: ['./comment-actions.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CommentActionsComponent {\n  @Input() public card: ScrollViewCard;\n\n  constructor() {\n  }\n\n  public commentClick(card: ScrollViewCard): void {\n    card.commentsExpanded = !card.commentsExpanded;\n  }\n\n  public postLikesCount(card: ScrollViewCard): void {\n    if (card.postLiked) {\n      card.postLikes -= 1;\n    } else {\n      card.postLikes += 1;\n    }\n\n    card.postLiked = !card.postLiked;\n  }\n\n  public postHeartIcon(card: ScrollViewCard): string {\n    return card.postLiked ? 'k-icon k-i-heart' : 'k-icon k-i-heart-outline';\n  }\n}\n","<div>\n  <button class=\"k-button k-flat\" (click)=\"postLikesCount(card)\">\n    <span [ngClass]=\"postHeartIcon(card)\"></span>\n  </button>\n  <button class=\"k-button k-flat\" (click)=\"commentClick(card)\">\n    <span class=\"k-icon k-i-comment\"></span>\n  </button>\n  <button class=\"k-button k-flat\"><span class=\"k-icon k-i-share\"></span></button>\n</div>\n<span class=\"post-likes-count\">{{ card.postLikes }} likes</span>\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\nimport {Comment} from \"../interface/comment\";\n\n@Component({\n  selector: 'post-comment',\n  templateUrl: './post-comment.component.html',\n  styleUrls: ['./post-comment.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PostCommentComponent {\n  @Input() public card: ScrollViewCard;\n\n  public commentLikesCount(comment: any): void {\n    if (comment.likes > 0) {\n      comment.likes -= 1;\n    } else {\n      comment.likes += 1;\n    }\n  }\n\n  public commentHeartIcon(comment: Comment): string {\n    if (comment && comment.likes > 0) {\n      return 'k-icon k-i-heart';\n    } else {\n      return 'k-icon k-i-heart-outline';\n    }\n  }\n\n  public postComment(card: ScrollViewCard): void {\n    if (card.newCommentTextValue) {\n      const comment = {text: card.newCommentTextValue, likes: 0};\n      card.comments.push(comment);\n      card.newCommentTextValue = '';\n    }\n  }\n}\n","<div *ngIf=\"card.comments.length\">\n  <div class=\"card-comment-wrapper\">\n    <div class=\"box\" *ngFor=\"let comment of card.comments\">\n      <div class=\"card-comment-container\">\n        <kendo-avatar\n          class=\"card-comment-thumbnail\"\n          [initials]=\"'EG'\"\n          [shape]=\"'circle'\"\n          [cssStyle]=\"{ color: 'white' }\"\n        >\n        </kendo-avatar>\n        <div class=\"comment-box\">\n          <span class=\"comment-text\">{{ comment.text }}</span>\n          <span class=\"time\">1s ago<span>{{ comment.likes }} like</span></span>\n        </div>\n      </div>\n      <button class=\"k-button k-flat\" (click)=\"commentLikesCount(comment)\">\n        <span [ngClass]=\"commentHeartIcon(comment)\"></span>\n      </button>\n    </div>\n  </div>\n</div>\n<div class=\"k-hbox card-post-comment-wrapper\">\n  <textarea class=\"k-textarea\" placeholder=\"Comment...\" [(ngModel)]=\"card.newCommentTextValue\"></textarea>\n  <button class=\"k-button k-primary k-flat\" (click)=\"postComment(card)\">Post</button>\n</div>\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\nimport {ScrollViewCard} from \"../interface/scrollViewCard\";\n\n@Component({\n  selector: 'scrollview-card',\n  templateUrl: './scroll-view-card.component.html',\n  styleUrls: ['./scroll-view-card.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ScrollViewCardComponent {\n  @Input() public card: ScrollViewCard;\n\n}\n","<kendo-card [width]=\"'260px'\">\n  <kendo-card-header class=\"k-hbox\">\n    <kendo-avatar width=\"40px\" height=\"40px\" [imageSrc]=\"card.thumbnailSrc\" [shape]=\"'circle'\"></kendo-avatar>\n    <div>\n      <h1 kendoCardTitle>{{ card.headerTitle }}</h1>\n      <p kendoCardSubtitle>{{ card.headerSubtitle }}</p>\n    </div>\n  </kendo-card-header>\n\n  <kendo-scrollview\n    *ngIf=\"card.scrollViewItems\"\n    kendoCardMedia\n    [data]=\"card.scrollViewItems\"\n    [width]=\"'100%'\"\n    [height]=\"'185px'\"\n    [arrows]=\"true\"\n    [pageable]=\"true\">\n    <ng-template let-item=\"item\">\n      <img src='{{ item.url }}' alt='{{ item.title }}' [ngStyle]=\"{ minWidth: '100%' }\" draggable=\"false\" />\n    </ng-template>\n  </kendo-scrollview>\n\n  <kendo-card-actions>\n    <comment-actions [card]=\"card\"></comment-actions>\n  </kendo-card-actions>\n\n  <hr kendoCardSeparator *ngIf=\"card.comments.length && card.commentsExpanded\">\n  <kendo-card-body *ngIf=\"card.commentsExpanded\">\n    <post-comment [card]=\"card\"></post-comment>\n  </kendo-card-body>\n</kendo-card>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-panel-bar',\n  templateUrl: './panel-bar.component.html',\n  styleUrls: ['./panel-bar.component.scss']\n})\nexport class PanelBarComponent {\n\n  baseImageUrl = 'https://demos.telerik.com/kendo-ui/content/web/panelbar/';\n\n  public imageUrl(imageName: string) {\n    return this.baseImageUrl + imageName + '.jpg';\n  }\n}\n","<div class=\"panelbar-wrapper\">\n  <kendo-panelbar>\n    <kendo-panelbar-item [title]=\"'My Teammates'\" expanded=\"true\">\n      <ng-template kendoPanelBarContent>\n        <div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('andrew')\" alt=\"Andrew Fuller\"/>\n            <span class=\"mate-info\">\n                                    <h2>Andrew Fuller</h2>\n                                    <p>Team Lead</p>\n                                </span>\n          </div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('nancy')\" alt=\"Nancy Leverling\"/>\n            <span class=\"mate-info\">\n                                    <h2>Nancy Leverling</h2>\n                                    <p>Sales Associate</p>\n                                </span>\n          </div>\n          <div class=\"teamMate\">\n            <img [src]=\"imageUrl('robert')\" alt=\"Robert King\"/>\n            <span class=\"mate-info\">\n                                    <h2>Robert King</h2>\n                                    <p>Business System Analyst</p>\n                                </span>\n          </div>\n        </div>\n      </ng-template>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Projects'\">\n      <kendo-panelbar-item [title]=\"'New Business Plan'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Sales Forecasts'\">\n        <kendo-panelbar-item [title]=\"'Q1 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q2 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q3 Forecast'\"></kendo-panelbar-item>\n        <kendo-panelbar-item [title]=\"'Q4 Forecast'\"></kendo-panelbar-item>\n      </kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Sales Reports'\"></kendo-panelbar-item>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Programs'\">\n      <kendo-panelbar-item [title]=\"'Monday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Tuesday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Wednesday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Thursday'\"></kendo-panelbar-item>\n      <kendo-panelbar-item [title]=\"'Friday'\"></kendo-panelbar-item>\n    </kendo-panelbar-item>\n    <kendo-panelbar-item [title]=\"'Communication'\" [disabled]=\"true\"></kendo-panelbar-item>\n  </kendo-panelbar>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PanelBarComponent} from './panel-bar.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [PanelBarComponent]\n})\nexport class PanelBarModule {\n  static entry = PanelBarComponent;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-splitter',\n  templateUrl: './splitter.component.html',\n  styleUrls: ['./splitter.component.scss']\n})\nexport class SplitterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<kendo-splitter orientation=\"vertical\" style=\"height: 340px;\">\n  <kendo-splitter-pane>\n    <kendo-splitter>\n      <kendo-splitter-pane [collapsible]=\"true\" size=\"30%\">\n        <div class=\"pane-content\">\n          <h3>Inner splitter / left pane</h3>\n          <p>Resizable and collapsible.</p>\n        </div>\n      </kendo-splitter-pane>\n      <kendo-splitter-pane>\n        <div class=\"pane-content\">\n          <h3>Inner splitter / center pane</h3>\n          <p>Resizable only.</p>\n        </div>\n      </kendo-splitter-pane>\n      <kendo-splitter-pane [collapsible]=\"true\" size=\"30%\">\n        <div class=\"pane-content\">\n          <h3>Inner splitter / right pane</h3>\n          <p>Resizable and collapsible.</p>\n        </div>\n      </kendo-splitter-pane>\n    </kendo-splitter>\n  </kendo-splitter-pane>\n  <kendo-splitter-pane size=\"100px\">\n    <div class=\"pane-content\">\n      <h3>Outer splitter / Middle pane</h3>\n      <p>Resizable only.</p>\n    </div>\n  </kendo-splitter-pane>\n  <kendo-splitter-pane [resizable]=\"false\" size=\"100px\">\n    <div class=\"pane-content\">\n      <h3>Outer splitter / Bottom pane</h3>\n      <p>Non-resizable and non-collapsible.</p>\n    </div>\n  </kendo-splitter-pane>\n</kendo-splitter>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SplitterComponent} from './splitter.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [SplitterComponent]\n})\nexport class SplitterModule {\n  static entry = SplitterComponent;\n}\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-stepper',\n  templateUrl: './stepper.component.html',\n  styleUrls: ['./stepper.component.scss']\n})\nexport class StepperComponent {\n\n  public current = 1;\n\n  public steps = [\n    {label: 'Personal Info', icon: 'user'},\n    {label: 'Education', icon: 'dictionary-add'},\n    {label: 'Attachments', icon: 'attachment', optional: true},\n    {label: 'Preview', icon: 'preview'},\n    {label: 'Submit', icon: 'file-add'}\n  ];\n\n}\n","\n<kendo-stepper\n  [steps]=\"steps\"\n  [stepType]=\"'full'\"\n  [(currentStep)]=\"current\"\n  [linear]=\"false\"\n  [style.width.px]=\"570\">\n</kendo-stepper>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StepperComponent} from './stepper.component';\nimport {LayoutModule} from \"@progress/kendo-angular-layout\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LayoutModule\n    ],\n  declarations: [StepperComponent]\n})\nexport class StepperModule {\n  static entry = StepperComponent;\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{ message }}</span>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {LoaderComponent} from './loader/loader.component';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('SharedModule');\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class SharedModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n  // Shell.childRoutes([{ path: 'about', loadChildren: () => import('./about/about.module').then((m) => m.AboutModule) }]),\n  // Fallback when no prior route is matched\n  {path: '**', redirectTo: '/home', pathMatch: 'full'},\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {preloadingStrategy: PreloadAllModules})\n  ],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\nimport {Logger} from \"./@core\";\n\nconst log = new Logger('AppComponent');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'client';\n\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","<router-outlet></router-outlet>\n","import {APP_INITIALIZER, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport \"reflect-metadata\";\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {HomeModule} from \"./home/home.module\";\nimport {CoreModule} from \"./@core\";\nimport {SharedModule} from \"./@shared\";\nimport {ShellModule} from \"./shell/shell.module\";\nimport {ConfigService} from \"./@core/services/config.service\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    /*Local Modules*/\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (config: ConfigService) => async () => await config.load(),\n      deps: [ConfigService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport {Shell} from \"../shell/shell.service\";\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: 'Home' } },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class HomeRoutingModule {}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('HomeComponent');\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class HomeComponent {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {HomeRoutingModule} from './home-routing.module';\nimport {HomeComponent} from './home.component';\nimport {CoreModule, Logger} from \"../@core\";\nimport {SharedModule} from \"../@shared\";\n\nconst log = new Logger('HomeModule');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedModule,\n    HomeRoutingModule\n  ],\n  declarations: [HomeComponent],\n})\nexport class HomeModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import {MenuEntity} from \"../@core/services/api.service\";\nimport {Expose} from \"class-transformer\";\n\nexport class MenuItem implements MenuEntity {\n  @Expose()\n  icon: string;\n\n  @Expose()\n  id: number;\n\n  @Expose()\n  module: string;\n\n  @Expose()\n  title: string;\n\n  @Expose()\n  selected: boolean;\n\n  @Expose()\n  get text(): string {\n    return this.title;\n  }\n\n  init(_data?: any): void {\n  }\n\n  toJSON(data?: any): any {\n  }\n}\n","import {Component, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation,} from '@angular/core';\nimport {DrawerSelectEvent} from \"@progress/kendo-angular-layout\";\nimport {map} from \"rxjs/operators\";\nimport {plainToClass} from \"class-transformer\";\nimport {isEmpty} from \"ramda\";\n\nimport {Logger, ModuleLoaderService} from \"../@core\";\nimport {environment} from \"../../environments/environment\";\nimport {MenuItem} from \"./menu-item\";\nimport {ApiService} from \"../@core/services/api.service\";\n\nconst log = new Logger('ShellComponent');\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ShellComponent implements OnInit {\n  @ViewChild('moduleContainer', {read: ViewContainerRef, static: true})\n  container: ViewContainerRef;\n\n  public selected: MenuItem;\n  public items: Array<MenuItem> = [];\n\n  constructor(private moduleLoader: ModuleLoaderService, private apiService: ApiService) {\n    log.debug('constructor');\n  }\n\n  async ngOnInit(): Promise<void> {\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n    const response = await this.apiService.getAllMenu().pipe(map(value => plainToClass(MenuItem, value))).toPromise();\n    if (!isEmpty(response)) {\n      Object.assign(response[0], {selected: true});\n      this.items = response;\n      this.loadModule(response[0].module);\n    }\n  }\n\n  loadModule(moduleName: string): void {\n    this.container.clear();\n    this.moduleLoader.load(moduleName, this.container).then(r => {\n      this.selected = this.items.find(i => i.selected);\n    });\n  }\n\n  public onSelect(ev: DrawerSelectEvent): void {\n    this.loadModule(ev.item.module);\n  }\n}\n","<div class=\"custom-toolbar\">\n  <button kendoButton [icon]=\"'layout'\" look=\"flat\" (click)=\"drawer.toggle()\"></button>\n  <span class=\"mail-box\">Application {{selected?.text}}</span>\n</div>\n<kendo-drawer-container>\n  <kendo-drawer #drawer [items]=\"items\" [mode]=\"'push'\" [mini]=\"true\" [expanded]=\"true\" (select)=\"onSelect($event)\"></kendo-drawer>\n  <kendo-drawer-content>\n    <router-outlet></router-outlet>\n    <div #moduleContainer></div>\n  </kendo-drawer-content>\n</kendo-drawer-container>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {DrawerModule, LayoutModule} from \"@progress/kendo-angular-layout\";\nimport {ButtonsModule} from \"@progress/kendo-angular-buttons\";\nimport {InputsModule} from \"@progress/kendo-angular-inputs\";\n\nimport {ShellComponent} from './shell.component';\nimport {Logger} from \"../@core\";\n\nconst log = new Logger('ShellModule');\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    /*Progress-Telerik*/\n    LayoutModule,\n    ButtonsModule,\n    DrawerModule,\n    InputsModule\n  ],\n  declarations: [ShellComponent],\n})\nexport class ShellModule {\n  constructor() {\n    log.debug('constructor');\n  }\n}\n","import { Routes, Route } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\nexport class Shell {\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      data: { reuse: true },\n    };\n  }\n}\n","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '0.0.1'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nimport {env} from './.env';\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000',\n  version: env.npm_package_version + '-dev'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst platform = platformBrowserDynamic();\nplatform.bootstrapModule(AppModule).catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}